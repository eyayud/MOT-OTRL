{"version":3,"sources":["webpack:///./src/@custor/models/user.model.ts","webpack:///./src/@custor/modules/shared.module.ts","webpack:///./src/@custor/services/security/auth.service.ts","webpack:///./src/@custor/services/security/endpoint-factory.service.ts","webpack:///./src/@custor/services/security/jwt-helper.ts"],"names":[],"mappings":"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","file":"default~auth-auth-module~customer-customer-module~main-main-module.js","sourcesContent":["export class User {\r\n    constructor(id?: string, userName?: string, fullName?: string, email?: string, tin?: string,\r\n        phoneNumber?: string, roles?: string[], siteCode?: string) {\r\n        this.Id = id;\r\n        this.UserName = userName;\r\n        this.FullName = fullName;\r\n        this.Email = email;\r\n        this.Tin = tin;\r\n        this.PhoneNumber = phoneNumber;\r\n        this.Roles = roles;\r\n        this.SiteCode = siteCode;\r\n    }\r\n\r\n    get FriendlyName(): string {\r\n        let name = this.FullName || this.UserName;\r\n\r\n        if (this.Tin) {\r\n            name = this.Tin + ' ' + name;\r\n        }\r\n\r\n        return name;\r\n    }\r\n\r\n    public Id: string;\r\n    public UserName: string;\r\n    public FullName: string;\r\n    public Email: string;\r\n    public Tin: string;\r\n    public SiteCode: string;\r\n    public PhoneNumber: string;\r\n    public IsEnabled: boolean;\r\n    public IsLockedOut: boolean;\r\n    public Roles: string[];\r\n}","import { NgModule } from '@angular/core';\r\n// import { ContentHeaderComponent } from '../components/content-header/content-header.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport {ContentHeaderModule} from '@custor/components/content-header/content-header.module';\r\n\r\n\r\nimport {\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatStepperModule,\r\n    MatDividerModule \r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatAutocompleteModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatStepperModule,\r\n        RouterModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        CommonModule,\r\n        FlexLayoutModule,\r\n        ContentHeaderModule,\r\n        MatDividerModule \r\n        \r\n    ],\r\n    exports: [\r\n        MatAutocompleteModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatStepperModule,\r\n        // ContentHeaderComponent,\r\n        CommonModule,\r\n        FlexLayoutModule,\r\n        ContentHeaderModule,\r\n        MatDividerModule \r\n    ],\r\n    declarations: [\r\n        // ContentHeaderComponent,\r\n      ],\r\n\r\n})\r\nexport class SharedModule { }\r\n","import {map, catchError} from 'rxjs/operators';\r\nimport {Injectable} from '@angular/core';\r\nimport {NavigationExtras, Router} from '@angular/router';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {LocalStoreManager} from '../storeManager.service';\r\n// import {EndpointFactory} from './endpoint-factory.service';\r\nimport {ConfigurationService} from '../configuration.service';\r\nimport {settingKeys} from '../../helpers/settingKeys';\r\nimport {JwtHelper} from './jwt-helper';\r\nimport {Utilities} from '../../helpers/utilities';\r\nimport {AccessToken, LoginResponse} from '../../models/login-response.model';\r\nimport {User} from '../../models/user.model';\r\nimport {UserLogin} from '../../models/user-login.model';\r\nimport {PermissionValues} from '../../models/permission.model';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\n// import { access } from 'fs';\r\n\r\n// import * as fs from 'fs';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  public get loginUrl() {\r\n    return this.configurations.loginUrl;\r\n  }\r\n\r\n  public get homeUrl() {\r\n    return this.configurations.homeUrl;\r\n  }\r\n\r\n  public loginRedirectUrl: string;\r\n  public logoutRedirectUrl: string;\r\n\r\n  public reLoginDelegate: () => void;\r\n\r\n  private previousIsLoggedInCheck = false;\r\n  private _loginStatus = new Subject<boolean>();\r\n\r\n  constructor(private router: Router, private configurations: ConfigurationService,\r\n              private localStorage: LocalStoreManager, protected http: HttpClient) {\r\n    this.initializeLoginStatus();\r\n  }\r\n\r\n  private initializeLoginStatus() {\r\n    this.localStorage.getInitEvent().subscribe(() => {\r\n      this.reevaluateLoginStatus();\r\n    });\r\n  }\r\n\r\n  gotoPage(page: string, preserveParams = true) {\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParamsHandling: preserveParams ? 'merge' : '', preserveFragment: preserveParams\r\n    };\r\n\r\n    this.router.navigate([page], navigationExtras);\r\n  }\r\n\r\n  redirectLoginUser() {\r\n    const redirect = this.loginRedirectUrl && this.loginRedirectUrl !== '/' && this.loginRedirectUrl\r\n    !== ConfigurationService.defaultHomeUrl ? this.loginRedirectUrl : this.homeUrl;\r\n    this.loginRedirectUrl = null;\r\n\r\n    const urlParamsAndFragment = Utilities.splitInTwo(redirect, '#');\r\n    const urlAndParams = Utilities.splitInTwo(urlParamsAndFragment.firstPart, '?');\r\n\r\n    const navigationExtras: NavigationExtras = {\r\n      fragment: urlParamsAndFragment.secondPart,\r\n      queryParams: Utilities.getQueryParamsFromString(urlAndParams.secondPart),\r\n      queryParamsHandling: 'merge'\r\n    };\r\n\r\n    this.router.navigate([urlAndParams.firstPart], navigationExtras);\r\n  }\r\n\r\n  redirectLogoutUser() {\r\n    const redirect = this.logoutRedirectUrl ? this.logoutRedirectUrl : this.loginUrl;\r\n    this.logoutRedirectUrl = null;\r\n\r\n    this.router.navigate([redirect]);\r\n  }\r\n\r\n  redirectForLogin() {\r\n    this.loginRedirectUrl = this.router.url;\r\n    this.router.navigate([this.loginUrl]);\r\n  }\r\n\r\n  reLogin() {\r\n    this.localStorage.deleteData(settingKeys.TOKEN_EXPIRES_IN);\r\n\r\n    if (this.reLoginDelegate) {\r\n      this.reLoginDelegate();\r\n    } else {\r\n      this.redirectForLogin();\r\n    }\r\n  }\r\n\r\n  refreshLogin() {\r\n    return this.getRefreshLoginEndpoint<LoginResponse>().pipe(\r\n      map(response => this.processLoginResponse(response, this.rememberMe)));\r\n  }\r\n\r\n  login(user: UserLogin) {\r\n    if (this.isLoggedIn) {\r\n      this.logout();\r\n    }\r\n\r\n    return this.getLoginEndpoint<LoginResponse>(user.userName, user.password).pipe(\r\n      map(response => this.processLoginResponse(response, user.rememberMe)));\r\n  }\r\n  getLoginEndpoint<T>(userName: string, password: string): Observable<T> {\r\n    const header = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n\r\n    const params = new HttpParams()\r\n      .append('username', userName)\r\n      .append('password', password)\r\n      .append('client_id', 'einvest_spa')\r\n      .append('grant_type', 'password')\r\n      .append('scope', 'openid email phone profile offline_access roles einvest_api');\r\n\r\n    return this.http.post<T>(this.loginUrl, params, { headers: header });\r\n  }\r\n  getRefreshLoginEndpoint<T>(): Observable<T> {\r\n    const header = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n\r\n    const params = new HttpParams()\r\n      .append('refresh_token', this.refreshToken)\r\n      .append('client_id', 'einvest_spa')\r\n      .append('grant_type', 'refresh_token');\r\n\r\n    return this.http.post<T>(this.loginUrl, params, { headers: header });\r\n  }\r\n\r\n  private processLoginResponse(response: LoginResponse, rememberMe: boolean) {\r\n\r\n    const accessToken = response.access_token;\r\n\r\n    if (accessToken == null) {\r\n      throw new Error('Received accessToken was empty');\r\n    }\r\n    localStorage.setItem('loggIn', 'true');\r\n\r\n\r\n    const refreshToken = response.refresh_token || this.refreshToken;\r\n    const expiresIn = response.expires_in;\r\n\r\n    const tokenExpiryDate = new Date();\r\n    tokenExpiryDate.setSeconds(tokenExpiryDate.getSeconds() + expiresIn);\r\n\r\n    const accessTokenExpiry = tokenExpiryDate;\r\n\r\n    const jwtHelper = new JwtHelper();\r\n    const decodedAccessToken = <AccessToken>jwtHelper.decodeToken(response.access_token);\r\n\r\n    const permissions: PermissionValues[] = Array.isArray(decodedAccessToken.permission) ?\r\n      decodedAccessToken.permission : [decodedAccessToken.permission];\r\n\r\n    if (!this.isLoggedIn) {\r\n      this.configurations.import(decodedAccessToken.configuration);\r\n    }\r\n\r\n    const user = new User(\r\n      decodedAccessToken.sub,\r\n      decodedAccessToken.name,\r\n      decodedAccessToken.fullname,\r\n      decodedAccessToken.email,\r\n      decodedAccessToken.tin,\r\n      decodedAccessToken.phone_number,\r\n      Array.isArray(decodedAccessToken.role) ? decodedAccessToken.role : [decodedAccessToken.role],\r\n      decodedAccessToken.sitecode\r\n    );\r\n    user.IsEnabled = true;\r\n\r\n\r\n    this.saveUserDetails(user, permissions, accessToken, refreshToken, accessTokenExpiry, rememberMe);\r\n\r\n    this.reevaluateLoginStatus(user);\r\n\r\n    return user;\r\n  }\r\n\r\n  private saveUserDetails(user: User, permissions: PermissionValues[],\r\n                          accessToken: string, refreshToken: string, expiresIn: Date, rememberMe: boolean) {\r\n    if (rememberMe) {\r\n      this.localStorage.savePermanentData(accessToken, settingKeys.ACCESS_TOKEN);\r\n      this.localStorage.savePermanentData(refreshToken, settingKeys.REFRESH_TOKEN);\r\n      this.localStorage.savePermanentData(expiresIn, settingKeys.TOKEN_EXPIRES_IN);\r\n      this.localStorage.savePermanentData(permissions, settingKeys.USER_PERMISSIONS);\r\n      this.localStorage.savePermanentData(user, settingKeys.CURRENT_USER);\r\n    } else {\r\n      this.localStorage.saveSyncedSessionData(accessToken, settingKeys.ACCESS_TOKEN);\r\n      this.localStorage.saveSyncedSessionData(refreshToken, settingKeys.REFRESH_TOKEN);\r\n      this.localStorage.saveSyncedSessionData(expiresIn, settingKeys.TOKEN_EXPIRES_IN);\r\n      this.localStorage.saveSyncedSessionData(permissions, settingKeys.USER_PERMISSIONS);\r\n      this.localStorage.saveSyncedSessionData(user, settingKeys.CURRENT_USER);\r\n    }\r\n\r\n    this.localStorage.savePermanentData(rememberMe, settingKeys.REMEMBER_ME);\r\n  }\r\n\r\n  logout(): void {\r\n    this.localStorage.deleteData(settingKeys.ACCESS_TOKEN);\r\n    this.localStorage.deleteData(settingKeys.REFRESH_TOKEN);\r\n    this.localStorage.deleteData(settingKeys.TOKEN_EXPIRES_IN);\r\n    this.localStorage.deleteData(settingKeys.USER_PERMISSIONS);\r\n    this.localStorage.deleteData(settingKeys.CURRENT_USER);\r\n\r\n    this.configurations.clearLocalChanges();\r\n\r\n    this.reevaluateLoginStatus();\r\n  }\r\n\r\n  private reevaluateLoginStatus(currentUser?: User) {\r\n    const user = currentUser || this.localStorage.getDataObject<User>(settingKeys.CURRENT_USER);\r\n    const isLoggedIn = user != null;\r\n\r\n    if (this.previousIsLoggedInCheck !== isLoggedIn) {\r\n      setTimeout(() => {\r\n        this._loginStatus.next(isLoggedIn);\r\n      });\r\n    }\r\n\r\n    this.previousIsLoggedInCheck = isLoggedIn;\r\n  }\r\n\r\n  getLoginStatusEvent(): Observable<boolean> {\r\n    return this._loginStatus.asObservable();\r\n  }\r\n\r\n  get currentUser(): User {\r\n    const user = this.localStorage.getDataObject<User>(settingKeys.CURRENT_USER);\r\n    this.reevaluateLoginStatus(user);\r\n\r\n    return user;\r\n  }\r\n\r\n  get userPermissions(): PermissionValues[] {\r\n    return this.localStorage.getDataObject<PermissionValues[]>(settingKeys.USER_PERMISSIONS) || [];\r\n  }\r\n\r\n  get accessToken(): string {\r\n    this.reevaluateLoginStatus();\r\n    return this.localStorage.getData(settingKeys.ACCESS_TOKEN);\r\n  }\r\n\r\n  get accessTokenExpiryDate(): Date {\r\n    this.reevaluateLoginStatus();\r\n    return this.localStorage.getDataObject<Date>(settingKeys.TOKEN_EXPIRES_IN, true);\r\n  }\r\n\r\n  get isSessionExpired(): boolean {\r\n    if (this.accessTokenExpiryDate == null) {\r\n      return true;\r\n    }\r\n\r\n    return this.accessTokenExpiryDate.valueOf() <= new Date().valueOf();\r\n  }\r\n\r\n  get refreshToken(): string {\r\n    this.reevaluateLoginStatus();\r\n    return this.localStorage.getData(settingKeys.REFRESH_TOKEN);\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    return this.currentUser != null;\r\n  }\r\n\r\n  get rememberMe(): boolean {\r\n    return this.localStorage.getDataObject<boolean>(settingKeys.REMEMBER_ME) === true;\r\n  }\r\n}\r\n","\r\nimport {switchMap,  map, filter, catchError, mergeMap } from 'rxjs/operators';\r\nimport { throwError as observableThrowError, Observable, Subject } from 'rxjs';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\nimport { ConfigurationService } from '../configuration.service';\r\n\r\n@Injectable()\r\nexport class EndpointFactory {\r\n  static readonly apiVersion: string = '1';\r\n\r\n  private readonly _loginUrl: string = '/connect/token';\r\n\r\n  private get loginUrl() { return this.configurations.tokenUrl + this._loginUrl; }\r\n\r\n  private taskPauser: Subject<any>;\r\n  private isRefreshingLogin: boolean;\r\n\r\n  private _authService: AuthService;\r\n\r\n  private get authService() {\r\n    if (!this._authService) {\r\n      this._authService = this.injector.get(AuthService);\r\n    }\r\n\r\n    return this._authService;\r\n  }\r\n\r\n  constructor(protected http: HttpClient, protected configurations: ConfigurationService, private injector: Injector) { }\r\n\r\n  getLoginEndpoint<T>(userName: string, password: string): Observable<T> {\r\n    const header = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n\r\n    const params = new HttpParams()\r\n      .append('username', userName)\r\n      .append('password', password)\r\n      .append('client_id', 'einvest_spa')\r\n      .append('grant_type', 'password')\r\n      .append('scope', 'openid email phone profile offline_access roles einvest_api');\r\n\r\n    return this.http.post<T>(this.loginUrl, params, { headers: header });\r\n  }\r\n\r\n  getRefreshLoginEndpoint<T>(): Observable<T> {\r\n    const header = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n\r\n    const params = new HttpParams()\r\n      .append('refresh_token', this.authService.refreshToken)\r\n      .append('client_id', 'einvest_spa')\r\n      .append('grant_type', 'refresh_token');\r\n\r\n    return this.http.post<T>(this.loginUrl, params, { headers: header }).pipe(\r\n      catchError(error => {\r\n        return this.handleError(error, () => this.getRefreshLoginEndpoint());\r\n      }));\r\n  }\r\n\r\n  protected getRequestHeaders(): { headers: HttpHeaders | { [header: string]: string | string[]; } } {\r\n    //    alert (this.authService.accessToken);\r\n    const headers = new HttpHeaders({\r\n      'Authorization': 'Bearer ' + this.authService.accessToken,\r\n      'Content-Type': 'application/json',\r\n      'Accept': `application/vnd.iman.v${EndpointFactory.apiVersion}+json, application/json, text/plain, */*`,\r\n      'App-Version': ConfigurationService.appVersion\r\n    });\r\n    // console.log('Headers ' + headers);\r\n    return { headers: headers };\r\n  }\r\n\r\n  protected handleError(error, continuation: () => Observable<any>) {\r\n    if (error.status === 401) {\r\n      if (this.isRefreshingLogin) {\r\n        return this.pauseTask(continuation);\r\n      }\r\n\r\n      this.isRefreshingLogin = true;\r\n\r\n      return this.authService.refreshLogin().pipe(\r\n        mergeMap(data => {\r\n          this.isRefreshingLogin = false;\r\n          this.resumeTasks(true);\r\n\r\n          return continuation();\r\n        }),\r\n        catchError(refreshLoginError => {\r\n          this.isRefreshingLogin = false;\r\n          this.resumeTasks(false);\r\n\r\n          // tslint:disable-next-line:max-line-length\r\n          if (refreshLoginError.status === 401 || (refreshLoginError.url && refreshLoginError.url.toLowerCase().includes(this.loginUrl.toLowerCase()))) {\r\n            this.authService.reLogin();\r\n            return observableThrowError('session expired');\r\n          } else {\r\n            return observableThrowError(refreshLoginError || 'server error');\r\n          }\r\n        }),);\r\n    }\r\n\r\n    if (error.url && error.url.toLowerCase().includes(this.loginUrl.toLowerCase())) {\r\n      this.authService.reLogin();\r\n\r\n      return observableThrowError((error.error && error.error.error_description) ? `session expired (${error.error.error_description})` : 'session expired');\r\n    } else {\r\n      return observableThrowError(error);\r\n    }\r\n  }\r\n\r\n  private pauseTask(continuation: () => Observable<any>) {\r\n    if (!this.taskPauser) {\r\n      this.taskPauser = new Subject();\r\n    }\r\n\r\n    return this.taskPauser.pipe(switchMap(continueOp => {\r\n      return continueOp ? continuation() : observableThrowError('session expired');\r\n    }));\r\n  }\r\n\r\n  private resumeTasks(continueOp: boolean) {\r\n    setTimeout(() => {\r\n      if (this.taskPauser) {\r\n        this.taskPauser.next(continueOp);\r\n        this.taskPauser.complete();\r\n        this.taskPauser = null;\r\n      }\r\n    });\r\n  }\r\n}\r\n","/**\r\n * Helper class to decode and find JWT expiration.\r\n */\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class JwtHelper {\r\n  public urlBase64Decode(str: string): string {\r\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\r\n    switch (output.length % 4) {\r\n      case 0: { break; }\r\n      case 2: { output += '=='; break; }\r\n      case 3: { output += '='; break; }\r\n      default: {\r\n        throw new Error('Illegal base64url string!');\r\n      }\r\n    }\r\n    return this.b64DecodeUnicode(output);\r\n  }\r\n\r\n  // https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\r\n  private b64DecodeUnicode(str: any) {\r\n    return decodeURIComponent(Array.prototype.map.call(atob(str), (c: any) => {\r\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    }).join(''));\r\n  }\r\n\r\n  public decodeToken(token: string): any {\r\n    const parts = token.split('.');\r\n\r\n    if (parts.length !== 3) {\r\n      throw new Error('JWT must have 3 parts');\r\n    }\r\n\r\n    const decoded = this.urlBase64Decode(parts[1]);\r\n    if (!decoded) {\r\n      throw new Error('Cannot decode the token');\r\n    }\r\n\r\n    return JSON.parse(decoded);\r\n  }\r\n\r\n  public getTokenExpirationDate(token: string): Date {\r\n    let decoded: any;\r\n    decoded = this.decodeToken(token);\r\n\r\n    if (!decoded.hasOwnProperty('exp')) {\r\n      return null;\r\n    }\r\n\r\n    const date = new Date(0); // The 0 here is the key, which sets the date to the epoch\r\n    date.setUTCSeconds(decoded.exp);\r\n\r\n    return date;\r\n  }\r\n\r\n  public isTokenExpired(token: string, offsetSeconds?: number): boolean {\r\n    const date = this.getTokenExpirationDate(token);\r\n    offsetSeconds = offsetSeconds || 0;\r\n\r\n    if (date == null) {\r\n      return false;\r\n    }\r\n\r\n    // Token expired?\r\n    return !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\r\n  }\r\n}"],"sourceRoot":""}