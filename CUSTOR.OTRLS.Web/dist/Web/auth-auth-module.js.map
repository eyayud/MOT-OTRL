{"version":3,"sources":["webpack:///./src/@custor/models/user-login.model.ts","webpack:///./src/@custor/services/animations.ts","webpack:///./src/@custor/validators/equal.validator.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/login/login-control.component.html","webpack:///./src/app/auth/login/login-control.component.scss","webpack:///./src/app/auth/login/login-control.component.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.scss","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/manage-password/manage.component.html","webpack:///./src/app/auth/manage-password/manage.component.scss","webpack:///./src/app/auth/manage-password/manage.component.ts","webpack:///./src/app/auth/register/confirm.component.html","webpack:///./src/app/auth/register/confirm.component.scss","webpack:///./src/app/auth/register/confirm.component.ts","webpack:///./src/app/auth/register/register.component.html","webpack:///./src/app/auth/register/register.component.scss","webpack:///./src/app/auth/register/register.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["export class UserLogin {\r\n    constructor(userName?: string, password?: string, rememberMe?: boolean) {\r\n        this.userName = userName;\r\n        this.password = password;\r\n        this.rememberMe = rememberMe;\r\n    }\r\n\r\n    userName: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n}","\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\nexport const fadeInOut = trigger('fadeInOut', [\r\n  transition(':enter', [style({ opacity: 0 }), animate('0.4s ease-in', style({ opacity: 1 }))]),\r\n  transition(':leave', [animate('0.4s 10ms ease-out', style({ opacity: 0 }))])\r\n])\r\n\r\n\r\n\r\nexport function flyInOut(duration: number = 0.2) {\r\n  return trigger('flyInOut', [\r\n    state('in', style({ opacity: 1, transform: 'translateX(0)' })),\r\n    transition('void => *', [style({ opacity: 0, transform: 'translateX(-100%)' }), animate(`${duration}s ease-in`)]),\r\n    transition('* => void', [animate(`${duration}s 10ms ease-out`, style({ opacity: 0, transform: 'translateX(100%)' }))])\r\n  ])\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport function EqualValidator(controlName: string): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const compareControl = control.parent ? control.parent.get(controlName) : null;\n        const areEqual = compareControl && control.value === compareControl.value;\n        return areEqual ? null : { notEqual: true };\n    };\n}","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '@custor/modules/shared.module';\r\nimport {RegisterComponent} from './register/register.component'; \r\nimport {ManagePasswordComponent} from './manage-password/manage.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {LoginControlComponent} from './login/login-control.component';\r\nimport {ConfirmComponent} from './register/confirm.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport {AppTranslationService, TranslateLanguageLoader} from '@custor/services/translation.service';\r\n// import {ConfigurationService} from '@custor/services/configuration.service';\r\nimport {EndpointFactory} from '@custor/services/security/endpoint-factory.service';\r\nimport {AccountService} from '@custor/services/security/account.service';\r\nimport {AccountEndpoint} from '@custor/services/security/account-endpoint.service';\r\n// import {LocalStoreManager} from '@custor/services/storeManager.service';\r\nimport {AuthService } from '@custor/services/security/auth.service';\r\n\r\nexport const routes = [\r\n    { path: '', redirectTo: 'login', pathMatch: 'full'},\r\n    { path: 'login', component: LoginComponent},\r\n    { path: 'register', component: RegisterComponent},\r\n    { path: 'manage/:id', component: ManagePasswordComponent}\r\n  ];\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useClass: TranslateLanguageLoader\r\n      }\r\n    }),\r\n  ],\r\n  declarations: [\r\n      RegisterComponent,\r\n      ManagePasswordComponent,\r\n      LoginComponent,\r\n      LoginControlComponent,\r\n      ConfirmComponent\r\n    ],\r\n    providers: [\r\n      AppTranslationService,\r\n      // ConfigurationService,\r\n      AccountService,\r\n      AccountEndpoint,\r\n      EndpointFactory,\r\n      // LocalStoreManager,\r\n      AuthService\r\n    ]\r\n})\r\nexport class AuthenticationModule {\r\n}\r\n","module.exports = \"<form [formGroup]=\\\"loginForm\\\" novalidate class=\\\"app-login-form\\\">\\r\\n  <mat-form-field class=\\\"app-validate\\\" appearance=\\\"outline\\\">\\r\\n    <mat-label>User name</mat-label>\\r\\n    <input matInput formControlName=\\\"userName\\\" required>\\r\\n    <mat-error *ngIf=\\\"userName.hasError('required')\\\">\\r\\n      User name is <strong>required</strong>\\r\\n    </mat-error>\\r\\n    <mat-icon matSuffix=\\\"\\\" color=\\\"primary\\\" class=\\\"mat-24\\\">person</mat-icon>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"app-validate\\\" appearance=\\\"outline\\\">\\r\\n    <mat-label>Password</mat-label>\\r\\n\\r\\n    <input matInput formControlName=\\\"password\\\" type=\\\"password\\\" required>\\r\\n    <mat-error *ngIf=\\\"password.hasError('required')\\\">\\r\\n      Password is <strong>required</strong>\\r\\n    </mat-error>\\r\\n    <mat-icon matSuffix=\\\"\\\" color=\\\"primary\\\" class=\\\"mat-24\\\">lock</mat-icon>\\r\\n\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-checkbox formControlName=\\\"rememberMe\\\">Remember me!</mat-checkbox>\\r\\n  <div>&nbsp;</div>\\r\\n\\r\\n</form>\\r\\n\\r\\n\\r\\n\"","module.exports = \".app-login-form .mat-form-field {\\n  width: 100%;\\n  margin-bottom: 0.5em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3lvL0Rlc2t0b3AvQ3VzdG9yL09UUkwvQ1VTVE9SLk9UUkxTLldlYi9zcmMvYXBwL2F1dGgvbG9naW4vbG9naW4tY29udHJvbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQVc7RUFDWCxvQkFBb0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbG9naW4vbG9naW4tY29udHJvbC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hcHAtbG9naW4tZm9ybSAubWF0LWZvcm0tZmllbGQge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcclxufSJdfQ== */\"","import {Component, Input, OnDestroy, OnInit, Output, EventEmitter, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators, NgForm} from '@angular/forms';\r\nimport {AuthService} from '../../../@custor/services/security/auth.service';\r\nimport {ToastrService, Toast} from 'ngx-toastr';\r\nimport {Utilities} from '../../../@custor/helpers/utilities';\r\nimport {UserLogin} from '@custor/models/user-login.model';\r\n\r\n@Component({\r\n  selector: 'app-login-control',\r\n  templateUrl: './login-control.component.html',\r\n  styleUrls: ['./login-control.component.scss']\r\n})\r\nexport class LoginControlComponent implements OnInit, OnDestroy {\r\n  loginForm: FormGroup;\r\n\r\n  isLoading = false;\r\n  formResetToggle = true;\r\n  loginStatusSubscription: any;\r\n\r\n  @ViewChild('form')\r\n  private form: NgForm;\r\n \r\n  @Output()\r\n  enterKeyPress = new EventEmitter();\r\n\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private authService: AuthService,\r\n    private formBuilder: FormBuilder\r\n    ) {\r\n    this.buildForm();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.loginForm.setValue({\r\n      userName: '',\r\n      password: '',\r\n      rememberMe: this.authService.rememberMe\r\n    });\r\n   }\r\n\r\n  ngOnDestroy() {\r\n    if (this.loginStatusSubscription) {\r\n      this.loginStatusSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  buildForm() {\r\n    this.loginForm = this.formBuilder.group({\r\n      userName: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      rememberMe: ''\r\n    });\r\n  }\r\n\r\n  get userName() {\r\n    return this.loginForm.get('userName');\r\n  }\r\n\r\n  get password() {\r\n    return this.loginForm.get('password');\r\n  }\r\n\r\n\r\n  getUserLogin(): UserLogin {\r\n    const formModel = this.loginForm.value;\r\n    return new UserLogin(formModel.userName, formModel.password, formModel.rememberMe);\r\n  }\r\n  login() {\r\n\r\n    \r\n    if (!this.form.submitted) {\r\n      this.form.onSubmit(null);\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n\r\n    this.authService.login(this.getUserLogin())\r\n      .subscribe(\r\n        user => {\r\n          setTimeout(() => {\r\n            this.isLoading = false;\r\n            this.reset();\r\n\r\n\r\n          }, 500);\r\n        },\r\n        error => {\r\n\r\n          if (Utilities.checkNoNetwork(error)) {\r\n            this.toastr.error(Utilities.noNetworkMessageCaption);\r\n          } else {\r\n            // tslint:disable-next-line:max-line-length\r\n            const errorMessage = Utilities.findHttpResponseMessage('error_description', error) || Utilities.findHttpResponseMessage('error', error);\r\n\r\n            if (errorMessage) {\r\n              this.toastr.error(Utilities.noNetworkMessageCaption, 'Unable to login');\r\n            } else {\r\n              this.toastr.error(Utilities.getResponseBody(error), 'Unable to login');\r\n            }\r\n          }\r\n          setTimeout(() => {\r\n            this.isLoading = false;\r\n          }, 500);\r\n        });\r\n  }\r\n\r\n  reset() {\r\n    this.formResetToggle = false;\r\n\r\n    setTimeout(() => {\r\n      this.formResetToggle = true;\r\n    });\r\n  }\r\n  enterKeyDown() {\r\n    this.enterKeyPress.emit();\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"page-content\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"35\\\" style=\\\"margin: 20px auto;\\\">\\r\\n  <div>\\r\\n  \\r\\n    <app-content-header \\r\\n      [icon]=\\\"'exit_to_app'\\\" \\r\\n      [title]=\\\"'Login'\\\" \\r\\n      [hasBgImage]=\\\"true\\\" \\r\\n      [class]=\\\"'py-4'\\\">\\r\\n    </app-content-header>\\r\\n    <mat-card class=\\\"mat-elevation-z6\\\">\\r\\n      <mat-card-header>\\r\\n        <!-- <mat-card-title>{{'mainMenu.Login' | translate}}</mat-card-title> -->\\r\\n      </mat-card-header>\\r\\n      <mat-card-content>\\r\\n        <app-login-control ></app-login-control>\\r\\n      </mat-card-content>\\r\\n      <div>\\r\\n        <div style=\\\"text-align: center\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"loginControl.isLoading\\\"\\r\\n                  (click)=\\\"loginControl.login()\\\">\\r\\n                  \\r\\n            <mat-spinner *ngIf=\\\"loginControl.isLoading\\\" [diameter]=\\\"24\\\"></mat-spinner>\\r\\n            Login\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <mat-card-actions style=\\\"margin: 10px;font-size: 13px\\\">\\r\\n        <div style=\\\"text-align: center\\\" class=\\\"m-t-10 row txt-c\\\"><p><span translate=\\\"\\\">Did you forget your </span>\\r\\n          <a ui-sref=\\\"confirmEmail\\\" translate=\\\"\\\" routerLink=\\\"/manage-password/0\\\">password</a>?\\r\\n        </p>\\r\\n          <span>Not created your account yet? <a routerLink=\\\"/register\\\">Register</a></span>\\r\\n        </div>\\r\\n      </mat-card-actions>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"@media (min-width: 768px) {\\n  .login-container {\\n    width: 700px; } }\\n\\n@media (min-width: 1200px) {\\n  .login-container {\\n    width: 730px; } }\\n\\nmat-spinner {\\n  display: inline-block;\\n  margin-right: 16px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3lvL0Rlc2t0b3AvQ3VzdG9yL09UUkwvQ1VTVE9SLk9UUkxTLldlYi9zcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSTtJQUNJLFlBQVksRUFBQSxFQUNmOztBQUdMO0VBQ0k7SUFDSSxZQUFZLEVBQUEsRUFDZjs7QUFHTDtFQUNJLHFCQUFxQjtFQUNyQixrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICAgIC5sb2dpbi1jb250YWluZXIge1xyXG4gICAgICAgIHdpZHRoOiA3MDBweDtcclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xyXG4gICAgLmxvZ2luLWNvbnRhaW5lciB7XHJcbiAgICAgICAgd2lkdGg6IDczMHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG5tYXQtc3Bpbm5lciB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XHJcbn0iXX0= */\"","import {Component, ViewChild} from '@angular/core';\r\nimport {LoginControlComponent} from './login-control.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\n\r\nexport class LoginComponent {\r\n  @ViewChild(LoginControlComponent)\r\n  loginControl: LoginControlComponent;\r\n  constructor() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"page-content\\\" style=\\\" margin:auto;width:500px;padding-top: 20px\\\">\\n  <div style=\\\"margin: 30px;\\\">\\n    <mat-toolbar color=\\\"primary\\\">\\n      <mat-toolbar-row>\\n        <span style=\\\"margin-top:9px; margin-right: 5px\\\"><mat-icon>lock</mat-icon></span>\\n        <span>{{dialogTitle}}</span>\\n        <span class=\\\"toolbar-spacer\\\"></span>\\n        <div class=\\\"header-actions\\\">\\n          <!-- <button mat-icon-button><mat-icon>more_vertical</mat-icon></button> -->\\n        </div>\\n      </mat-toolbar-row>\\n    </mat-toolbar>\\n    <mat-card>\\n      <mat-card-header>\\n        <!-- <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n        <mat-card-title>Title1</mat-card-title>\\n        <mat-card-subtitle>Title 2</mat-card-subtitle> -->\\n      </mat-card-header>\\n\\n      <mat-card-content>\\n        <form #form=\\\"ngForm\\\" [formGroup]=\\\"userProfileForm\\\" novalidate (ngSubmit)=\\\"save()\\\" fxLayout=\\\"column\\\"\\n              fxLayoutGap=\\\"1em\\\" autocomplete=\\\"off\\\">\\n\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\n            <mat-form-field fxFlex>\\n              <mat-label>{{'users.editor.Email' | translate}}</mat-label>\\n              <input matInput formControlName=\\\"email\\\" required/>\\n              <mat-error *ngIf=\\\"email.hasError('required')\\\">\\n                {{'users.editor.EmailRequired' | translate}}\\n              </mat-error>\\n              <mat-error *ngIf=\\\"!email.hasError('required') && email.hasError('email')\\\">\\n                {{'users.editor.InvalidEmail' | translate}}\\n              </mat-error>             \\n            </mat-form-field>\\n          </div>\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\n            <mat-form-field fxFlex>\\n              <mat-label>{{'users.editor.UserName' | translate}}</mat-label>\\n              <input matInput formControlName=\\\"userName\\\" autocomplete=\\\"off\\\" required/>\\n              <mat-error *ngIf=\\\"userName.hasError('required')\\\">\\n                {{'users.editor.UserNameRequired' | translate}}\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\"> \\n            <mat-form-field fxFlex *ngIf=\\\"showOldPassword\\\">\\n              <mat-label>{{oldPasswordCaption}}</mat-label>\\n              <input matInput type=\\\"password\\\" formControlName=\\\"oldPassword\\\" autocomplete=\\\"off\\\" />\\n              <mat-error *ngIf=\\\"oldPassword.hasError('required')\\\">\\n                Old Password is Required\\n              </mat-error>\\n            </mat-form-field>\\n          </div> \\n          <div formGroupName=\\\"password\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\n\\n            <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\n              <mat-form-field>\\n                <mat-label>{{'users.editor.NewPassword' | translate}}</mat-label>\\n                <input matInput type=\\\"password\\\" formControlName=\\\"newPassword\\\" autocomplete=\\\"off\\\" required/>\\n                <mat-error *ngIf=\\\"newPassword.hasError('required')\\\">\\n                  {{'users.editor.NewPasswordRequired' | translate}}\\n                </mat-error>\\n                <mat-error *ngIf=\\\"!newPassword.hasError('required') && newPassword.hasError('pattern')\\\">\\n                  {{'users.editor.NewPasswordRules' | translate}}\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\n\\n              <mat-form-field fxFlex>\\n                <mat-label>{{'users.editor.ConfirmPassword' | translate}}</mat-label>\\n                <input matInput type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" required/>\\n                <mat-error *ngIf=\\\"confirmPassword.hasError('required')\\\">\\n                  {{'users.editor.ConfirmationPasswordRequired' | translate}}\\n                </mat-error>\\n                <mat-error *ngIf=\\\"!confirmPassword.hasError('required') && confirmPassword.hasError('notEqual')\\\">\\n                  Test\\n                  {{'users.editor.PasswordMismatch' | translate}}\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n\\n          <div>&nbsp;</div>\\n        </form>\\n      </mat-card-content>\\n      <div style=\\\"text-align: center\\\">\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">{{actionCaption}}\\n        </button>\\n      </div>\\n    </mat-card>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbWFuYWdlLXBhc3N3b3JkL21hbmFnZS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, NgForm, Validators} from '@angular/forms';\n\nimport {Subject, Subscription} from 'rxjs';\n\nimport {AppTranslationService} from '../../../@custor/services/translation.service';\nimport {AccountService} from '../../../@custor/services/security/account.service';\nimport {ToastrService} from 'ngx-toastr';\n\nimport {User} from '../../../@custor/models/user.model';\nimport {UserEdit} from '../../../@custor/models/user-edit.model';\nimport {Role} from '../../../@custor/models/role.model';\nimport {EqualValidator} from '../../../@custor/validators/equal.validator';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-manage-password',\n  templateUrl: './manage.component.html',\n  styleUrls: ['./manage.component.scss']\n})\nexport class ManagePasswordComponent implements OnDestroy, OnInit {\n  @ViewChild('form')\n  private form: NgForm;\n  isNewUser = true;\n  showOldPassword = false;\n  isChangePassword = false;\n  private passwordWatcher: Subscription;\n  private onUserSaved = new Subject<User>();\n  @Input() dialogTitle: string;\n  @Input() oldPasswordCaption: string;\n  @Input() actionCaption: string;\n  @Input() user: User = new User();\n  @Input() roles: Role[] = [];\n  @Input() isEditMode = false;\n\n  userProfileForm: FormGroup;\n  userSaved$ = this.onUserSaved.asObservable();\n\n  constructor(private alertService: ToastrService,\n              private translationService: AppTranslationService,\n              private accountService: AccountService,\n              private formBuilder: FormBuilder, private router: Router, private activatedRoute: ActivatedRoute) {\n    this.buildForm();\n  }\n\n  ngOnDestroy() {\n    this.passwordWatcher.unsubscribe();\n  }\n\n  ngOnInit() {\n\n    const id = this.activatedRoute.snapshot.params['id'];\n    // console.debug(id);\n    if (id === '1') { // 0=reset, 1=change\n      this.isChangePassword = true;\n      this.dialogTitle = 'Change Password';\n      this.actionCaption = 'Change Password';\n      this.oldPasswordCaption = 'Old Password';\n      this.showOldPassword = true;\n      // this.oldPassword.setValidators([Validators.required, Validators.pattern(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W]).{8,}/)]);\n    } else {\n      this.isChangePassword = false;\n      this.dialogTitle = 'Reset Password';\n      this.actionCaption = 'Reset Password';\n      this.oldPasswordCaption = 'Old Password - Not Required';\n      this.showOldPassword = false;\n    }\n    if (!this.isChangePassword) {\n      const cOldPassword = this.userProfileForm.get('oldPassword');\n      cOldPassword.clearValidators();\n    }\n  }\n\n  formControlValueChanged() {\n    if (this.isChangePassword) {\n      this.addOldPasswordValidator();\n    }\n  }\n\n  private buildForm() {\n    this.userProfileForm = this.formBuilder.group({\n      userName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      oldPassword: ['', [Validators.required, Validators.pattern(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W]).{8,}/)]],\n      password: this.formBuilder.group({\n        newPassword: ['', [Validators.required, Validators.pattern(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W]).{8,}/)]],\n        confirmPassword: ['', [Validators.required, EqualValidator('newPassword')]],\n      })\n    });\n    this.passwordWatcher = this.newPassword.valueChanges.subscribe(() =>\n      this.confirmPassword.updateValueAndValidity());\n\n    // this.formControlValueChanged();\n  }\n\n  public beginEdit() {\n    this.isEditMode = true;\n    this.isChangePassword = false;\n  }\n\n  public save() {\n    if (!this.form.submitted) {\n      // Causes validation to update.\n      this.form.onSubmit(null);\n      return;\n    }\n\n    if (!this.userProfileForm.valid) {\n      this.alertService.error(this.translationService.getTranslation('form.ErrorMessage'),\n        this.translationService.getTranslation('form.ErrorCaption'));\n      return;\n    }\n\n    const editedUser = this.getEditedUser();\n    // console.log(editedUser);\n    this.accountService.resetAccount(editedUser).subscribe(\n      response => this.saveCompleted(),\n      error => this.saveFailed(error));\n  }\n\n\n  private getEditedUser(): UserEdit {\n    const formModel = this.userProfileForm.value;\n    const tempRole: string[] = ['DummyRole']; // not required here\n    return {\n      Id: '0', // not required\n      Tin: '', // not required\n      UserName: formModel.userName,\n      FullName: '', // not required\n      FriendlyName: '', // not required\n      Email: formModel.email,\n      PhoneNumber: '', // not required\n      Roles: tempRole, // not required\n      CurrentPassword: this.isChangePassword ? formModel.oldPassword : 'resetme',\n      NewPassword: formModel.password.newPassword,\n      ConfirmPassword: formModel.password.confirmPassword,\n      IsEnabled: true, // to be further checked\n      IsLockedOut: false, // to be further checked\n      SiteCode: ''// not required\n    };\n  }\n\n  private saveCompleted(user?: User) {\n    if (user) {\n      this.user = user;\n    }\n    this.alertService.success('Your account has been registered successfully.', 'Success');\n    this.onUserSaved.next(this.user);\n    this.router.navigate(['/confirm']);\n  }\n\n  private saveFailed(error: any) {\n    this.alertService.error('One or more errors occured whilst saving your changes:',\n      'Save Error');\n    this.alertService.error(null, error);\n  }\n\n  validateMinMax(min, max) {\n    return ['', [\n      Validators.required,\n      Validators.minLength(min),\n      Validators.maxLength(max),\n      Validators.pattern('[0-9]+')  //  digits only\n    ]];\n  }\n\n  private addOldPasswordValidator() {\n    this.oldPassword.setValidators([Validators.required, Validators.pattern(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W]).{8,}/)]);\n  }\n\n  get userName() {\n    return this.userProfileForm.get('userName');\n  }\n\n  get email() {\n    return this.userProfileForm.get('email');\n  }\n\n  get password() {\n    return this.userProfileForm.get('password');\n  }\n\n  get oldPassword() {\n    return this.userProfileForm.get('oldPassword');\n  }\n\n  get newPassword() {\n    return this.password.get('newPassword');\n  }\n\n  get confirmPassword() {\n    return this.password.get('confirmPassword');\n  }\n\n  get assignedRoles() {\n    return this.userProfileForm.get('roles');\n  }\n\n\n  get floatLabels(): string {\n    return this.isEditMode ? 'auto' : 'always';\n  }\n\n\n}\n","module.exports = \"<!-- <app-page-header title=\\\"Confirm\\\" icon=\\\"error\\\"></app-page-header> -->\\n<div [@fadeInOut] class=\\\"page-content mat-elevation-z8\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" class=\\\"content\\\">\\n        <div class=\\\"info-nag\\\">\\n            <div class=\\\"info-split info-info\\\"><i></i></div>\\n          <div class=\\\"info-text\\\">Dear customer; Thank you for registering. <br>\\n            An email has been sent for confirmtion. Please click on the confirmation link to activate your account.\\n            </div>\\n            <br>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".page-content {\\n  margin-top: 70px;\\n  margin-left: 30%;\\n  margin-right: 30%;\\n  height: 160px; }\\n\\n.info-nag {\\n  display: inline-block;\\n  font-size: 14px;\\n  text-align: left;\\n  background-color: #fff;\\n  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.1);\\n  margin: auto;\\n  margin-top: 10px; }\\n\\n.info-nag:hover {\\n  cursor: pointer;\\n  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.3); }\\n\\n.info-nag > .info-split {\\n  background: #337ab7;\\n  width: 10px;\\n  float: left;\\n  color: #fff !important;\\n  height: 100%;\\n  text-align: center; }\\n\\n.info-nag > .info-split.info-info {\\n  background: #5bc0de !important; }\\n\\n.info-nag > .info-text {\\n  line-height: 19px;\\n  padding-top: 11px;\\n  padding-left: 45px;\\n  padding-right: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3lvL0Rlc2t0b3AvQ3VzdG9yL09UUkwvQ1VTVE9SLk9UUkxTLldlYi9zcmMvYXBwL2F1dGgvcmVnaXN0ZXIvY29uZmlybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGFBQWEsRUFBQTs7QUFHakI7RUFDSSxxQkFBcUI7RUFDckIsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixzQkFBcUI7RUFJckIsMENBQXNDO0VBQ3RDLFlBQVk7RUFFWixnQkFBZ0IsRUFBQTs7QUFHbEI7RUFDSSxlQUFlO0VBRWpCLDBDQUFzQyxFQUFBOztBQUV4QztFQUNFLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsV0FBVztFQUNYLHNCQUFxQjtFQUNyQixZQUFZO0VBQ1osa0JBQWtCLEVBQUE7O0FBRXBCO0VBQ0UsOEJBQTZCLEVBQUE7O0FBRS9CO0VBQ0UsaUJBQWlCO0VBQ2pCLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsbUJBQW1CLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3JlZ2lzdGVyL2NvbmZpcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFnZS1jb250ZW50IHtcbiAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBtYXJnaW4tdG9wOiA3MHB4O1xuICAgIG1hcmdpbi1sZWZ0OiAzMCU7XG4gICAgbWFyZ2luLXJpZ2h0OiAzMCU7XG4gICAgaGVpZ2h0OiAxNjBweDtcbn1cbi8vICAgIEluZm8gQmFyXG4uaW5mby1uYWd7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGJhY2tncm91bmQtY29sb3I6I2ZmZjtcbiAgICAvLyBjb2xvcjogd2hpdGU7XG4gICAgLy8gaGVpZ2h0OiA3MHB4O1xuICAgIC13ZWJraXQtYm94LXNoYWRvdzogMCAxcHggMXB4IDAgcmdiYSgwLDAsMCwuMik7XG4gICAgYm94LXNoYWRvdzogMCAxcHggMXB4IDAgcmdiYSgwLDAsMCwuMSk7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIC8vIHdpZHRoOiAxMDAwcHg7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgfVxuXG4gIC5pbmZvLW5hZzpob3ZlcntcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIC13ZWJraXQtYm94LXNoYWRvdzogMCAxcHggMXB4IDAgcmdiYSgwLDAsMCwuNCk7XG4gICAgYm94LXNoYWRvdzogMCAxcHggMXB4IDAgcmdiYSgwLDAsMCwuMyk7XG4gIH1cbiAgLmluZm8tbmFnID4gLmluZm8tc3BsaXR7XG4gICAgYmFja2dyb3VuZDogIzMzN2FiNztcbiAgICB3aWR0aDogMTBweDtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBjb2xvcjogI2ZmZiFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuICAuaW5mby1uYWcgPiAuaW5mby1zcGxpdC5pbmZvLWluZm97XG4gICAgYmFja2dyb3VuZDogIzViYzBkZSFpbXBvcnRhbnQ7XG4gIH1cbiAgLmluZm8tbmFnID4gLmluZm8tdGV4dHtcbiAgICBsaW5lLWhlaWdodDogMTlweDtcbiAgICBwYWRkaW5nLXRvcDogMTFweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDQ1cHg7XG4gICAgcGFkZGluZy1yaWdodDogMjBweDtcbiAgfSJdfQ== */\"","import { Component } from '@angular/core';\nimport { fadeInOut } from '../../../@custor/services/animations';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.scss'],\n  animations: [fadeInOut]\n})\nexport class ConfirmComponent {\n}","module.exports = \"<div class=\\\"page-content\\\" style=\\\" margin:auto;width:500px;\\\">\\n  <div class=\\\"mat-elevation-z8\\\" style=\\\"margin: 30px;\\\">\\n    <mat-progress-bar *ngIf=\\\"loadingIndicator\\\" mode=\\\"query\\\"></mat-progress-bar>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <mat-toolbar-row>\\n        <span style=\\\"margin-top:9px; margin-right: 5px\\\"><mat-icon>person</mat-icon></span>\\n        <span>Register</span>\\n        <span class=\\\"toolbar-spacer\\\"></span>\\n        <div class=\\\"header-actions\\\">\\n          <!-- <button mat-icon-button><mat-icon>more_vertical</mat-icon></button> -->\\n        </div>\\n      </mat-toolbar-row>\\n    </mat-toolbar>\\n    <mat-card>\\n      <div class=\\\"error-bar\\\" style=\\\"width:100%; \\\" *ngIf=\\\"errors.length > 0\\\">\\n        <ul>\\n          <li *ngFor=\\\"let error of errors\\\">\\n            {{ error }}\\n          </li>\\n        </ul>\\n      </div>\\n      <mat-card-content>\\n        <form #form=\\\"ngForm\\\" [formGroup]=\\\"userProfileForm\\\" novalidate (ngSubmit)=\\\"save()\\\" fxLayout=\\\"column\\\"\\n              fxLayoutGap=\\\"1em\\\" autocomplete=\\\"off\\\">\\n\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\n            <mat-form-field fxFlex appearance=\\\"outline\\\">\\n              <mat-label>{{'users.editor.FullName' | translate}}</mat-label>\\n              <input matInput formControlName=\\\"fullName\\\" required/>\\n              <mat-icon matSuffix=\\\"\\\" color=\\\"primary\\\" class=\\\"mat-24\\\">person</mat-icon>\\n            </mat-form-field>\\n          </div>\\n\\n \\n\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\n            <mat-form-field fxFlex *ngIf=\\\"isExisting\\\" appearance=\\\"outline\\\">\\n              <mat-label name=\\\"lblTIN\\\">{{'users.editor.TIN' | translate}}</mat-label>\\n              <input matInput formControlName=\\\"tin\\\" NaturalNumberOnlyDir/>\\n              <mat-error\\n                *ngIf=\\\"(tin.hasError('required') || tin.hasError('minLength') || tin.hasError('maxLength'))\\n                 && tin.touched \\\">\\n                {{'users.editor.TINRequired' | translate}}\\n                <!--<small class=\\\"error\\\" *ngIf=\\\"!tin.hasError('isTinUnique')\\\">-->\\n\\n                <!--</small>-->\\n\\n              </mat-error>\\n              <mat-error class=\\\"error\\\"\\n                         *ngIf=\\\"!tin.hasError('required') && tin.hasError('isTinUnique')\\\">\\n                This Tin not registered\\n              </mat-error>\\n              <mat-icon matSuffix=\\\"\\\" color=\\\"primary\\\" class=\\\"mat-24\\\">key</mat-icon>\\n            </mat-form-field>\\n          </div>\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\n            <mat-form-field fxFlex appearance=\\\"outline\\\">\\n              <mat-label>{{'users.editor.Email' | translate}}</mat-label>\\n              <input matInput formControlName=\\\"email\\\" required/>\\n              <mat-error *ngIf=\\\"email.hasError('required')\\\">\\n                {{'users.editor.EmailRequired' | translate}}\\n              </mat-error>\\n              <mat-error *ngIf=\\\"!email.hasError('required') && email.hasError('email')\\\">\\n                {{'users.editor.InvalidEmail' | translate}}\\n              </mat-error>\\n              <mat-error class=\\\"error\\\"\\n                         *ngIf=\\\"!email.hasError('required') && email.hasError('isEmailUnique')\\\">\\n                This email has been registered already\\n              </mat-error>\\n              <mat-icon matSuffix=\\\"\\\" color=\\\"primary\\\" class=\\\"mat-24\\\">email</mat-icon>\\n            </mat-form-field>\\n          </div>\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\n            <mat-form-field fxFlex appearance=\\\"outline\\\">\\n              <mat-label>{{'users.editor.PhoneNumber' | translate}}</mat-label>\\n              <input matInput NaturalNumberOnlyDir formControlName=\\\"phoneNumber\\\" required autocomplete=\\\"off\\\"/>\\n              <mat-icon matSuffix=\\\"\\\" color=\\\"primary\\\" class=\\\"mat-48\\\">phone</mat-icon>\\n            </mat-form-field>\\n          </div>\\n\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>{{'users.editor.UserName' | translate}}</mat-label>\\n              <input matInput formControlName=\\\"userName\\\" autocomplete=\\\"off\\\" required/>\\n              <mat-error *ngIf=\\\"userName.hasError('required')\\\">\\n                {{'users.editor.UserNameRequired' | translate}}\\n              </mat-error>\\n              <mat-icon matSuffix=\\\"\\\" color=\\\"primary\\\" class=\\\"mat-24\\\">person_add</mat-icon>\\n            </mat-form-field>\\n          </div>\\n\\n          <div formGroupName=\\\"password\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\n\\n            <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\n              <mat-form-field fxFlex=\\\"80\\\" appearance=\\\"outline\\\">\\n                <mat-label>{{'users.editor.NewPassword' | translate}}</mat-label>\\n                <input matInput type=\\\"password\\\" formControlName=\\\"newPassword\\\" autocomplete=\\\"off\\\" required/>\\n                <mat-error *ngIf=\\\"newPassword.hasError('required')\\\">\\n                  {{'users.editor.NewPasswordRequired' | translate}}\\n                </mat-error>\\n                <mat-error *ngIf=\\\"!newPassword.hasError('required') && newPassword.hasError('pattern')\\\">\\n                  {{'users.editor.NewPasswordRules' | translate}}\\n                </mat-error>\\n                <mat-icon matSuffix=\\\"\\\" color=\\\"primary\\\" class=\\\"mat-24\\\">lock_open</mat-icon>\\n              </mat-form-field>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\n\\n              <mat-form-field fxFlex=\\\"80\\\" appearance=\\\"outline\\\">\\n                <mat-label>{{'users.editor.ConfirmPassword' | translate}}</mat-label>\\n                <input matInput type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" required/>\\n                <mat-error *ngIf=\\\"confirmPassword.hasError('required')\\\">\\n                  {{'users.editor.ConfirmationPasswordRequired' | translate}}\\n                </mat-error>\\n                <mat-error *ngIf=\\\"!confirmPassword.hasError('required') && confirmPassword.hasError('notEqual')\\\">\\n                  {{'users.editor.PasswordMismatch' | translate}}\\n                </mat-error>\\n                <mat-icon matSuffix=\\\"\\\" color=\\\"primary\\\" class=\\\"mat-24\\\">lock_open</mat-icon>\\n\\n              </mat-form-field>\\n            </div>\\n          </div>\\n     \\n          <!-- https://github.com/angular/material2/issues/8798 -->\\n          <div>&nbsp;</div>\\n        </form>\\n      </mat-card-content>\\n \\n\\n      <div style=\\\"text-align: center\\\">\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\" [disabled]=\\\"userProfileForm.invalid\\\">Register\\n        </button>\\n      </div>\\n   \\n    </mat-card>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, NgForm, Validators} from '@angular/forms';\n\nimport {Subject, Subscription} from 'rxjs';\n \nimport {User} from '@custor/models/user.model';\nimport {UserEdit} from '@custor/models/user-edit.model';\nimport {Role} from '@custor/models/role.model';\nimport {Permission} from '@custor/models/permission.model';\nimport {EqualValidator} from '@custor/validators/equal.validator';\nimport {Router} from '@angular/router';\nimport {Utilities} from '@custor/helpers/utilities';\n\nimport {AppTranslationService} from '@custor/services/translation.service';\nimport {AccountService} from '@custor/services/security/account.service';\nimport {ToastrService} from 'ngx-toastr';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnDestroy, OnInit {\n  @ViewChild('form')\n  private form: NgForm;\n  isExisting = false;\n  isNewUser = true;\n  isChangePassword = false;\n  private isSaving = false;\n  private passwordWatcher: Subscription;\n  private onUserSaved = new Subject<User>();\n\n  @Input() user: User = new User();\n  @Input() roles: Role[] = [];\n  @Input() isEditMode = false;\n  @Input() errors: string[] = [];\n  userProfileForm: FormGroup;\n  userSaved$ = this.onUserSaved.asObservable();\n  loadingIndicator: boolean;\n  constructor(\n    private alertService: ToastrService,\n    private translationService: AppTranslationService,\n    private accountService: AccountService,\n    private formBuilder: FormBuilder, private router: Router) {\n    this.buildForm();\n \n  }\n\n  ngOnDestroy() {\n    this.passwordWatcher.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.formControlValueChanged();\n  }\n\n  formControlValueChanged() {\n    const cTin = this.userProfileForm.get('tin');\n\n    this.existingCustomer.valueChanges.subscribe(\n      (checkStatus: boolean) => {\n        if (checkStatus === true) {\n          cTin.setValidators([Validators.required, Validators.minLength(10), Validators.maxLength(10)]);\n          // cTin.setAsyncValidators(this.isTinUnique.bind(this));\n        } else {\n          cTin.clearValidators();\n        }\n        cTin.updateValueAndValidity();\n      });\n  }\n\n  private buildForm() {\n    this.userProfileForm = this.formBuilder.group({\n      tin: '',\n      userName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: this.formBuilder.group({\n        newPassword: ['', [Validators.required, Validators.pattern(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W]).{8,}/)]],\n        confirmPassword: ['', [Validators.required, EqualValidator('newPassword')]],\n      }),\n      fullName: ['', Validators.required],\n      phoneNumber: ['', Validators.required],\n      isExistingCustomer: false,\n      // recaptcha: [null]\n    });\n\n    this.passwordWatcher = this.newPassword.valueChanges.subscribe(() =>\n      this.confirmPassword.updateValueAndValidity());\n  }\n\n  public resetForm(stopEditing: boolean = false) {\n    if (stopEditing) {\n      this.isEditMode = false;\n    }\n\n    if (!this.user) {\n      this.isNewUser = true;\n      this.user = new User();\n    }\n\n    if (this.isNewUser) {\n      this.isChangePassword = true;\n      this.addNewPasswordValidators();\n    } else {\n      this.isChangePassword = false;\n      this.newPassword.clearValidators();\n      this.confirmPassword.clearValidators();\n    }\n\n    this.userProfileForm.reset({\n      tin: this.user.Tin || '',\n      userName: this.user.UserName || '',\n      email: this.user.Email || '',\n      password: {\n        newPassword: '',\n        confirmPassword: ''\n      },\n      fullName: this.user.FullName || '',\n      phoneNumber: this.user.PhoneNumber || '',\n      isExistingCustomer: false\n    });\n  }\n\n  public beginEdit() {\n    this.isEditMode = true;\n    this.isChangePassword = false;\n  }\n\n  public save() {\n    this.loadingIndicator = true;\n    if (!this.form.submitted) {\n      // Causes validation to update.\n      this.form.onSubmit(null);\n      return;\n    }\n\n    if (!this.userProfileForm.valid) {\n      this.alertService.error(this.translationService.getTranslation('form.ErrorMessage'),\n        this.translationService.getTranslation('form.ErrorCaption'));\n      return;\n    }\n\n    this.isSaving = true;\n    const editedUser = this.getEditedUser();\n\n    if (this.isNewUser) {\n      // this.accountService.newUser(editedUser).subscribe(\n      //   user => this.saveCompleted(user),\n      //   error => this.saveFailed(error));\n\n      this.accountService.selfRegisterNewUser(editedUser).subscribe(\n        user => this.saveCompleted(user),\n        error => this.saveFailed(error));\n\n    } else {\n      this.accountService.updateUser(editedUser).subscribe(\n        response => this.saveCompleted(editedUser),\n        error => this.saveFailed(error));\n    }\n\n    this.loadingIndicator = false;\n  }\n\n  public cancel() {\n    this.resetForm();\n    this.isEditMode = false;\n  }\n\n  private getEditedUser(): UserEdit {\n    const formModel = this.userProfileForm.value;\n    const tempRole: string[] = ['Online Users'];\n    const onlineSitecode = 'OnlineSite';\n    return {\n      Id: this.user.Id,\n      Tin: formModel.tin,\n      UserName: formModel.userName,\n      FullName: formModel.fullName,\n      FriendlyName: formModel.friendlyName,\n      Email: formModel.email,\n      PhoneNumber: formModel.phoneNumber,\n      Roles: tempRole,\n      CurrentPassword: '',\n      NewPassword: formModel.password.newPassword,\n      ConfirmPassword: formModel.password.confirmPassword,\n      IsEnabled: true,\n      IsLockedOut: false,\n      SiteCode: onlineSitecode\n    };\n  }\n\n  private saveCompleted(user?: User) {\n    if (user) {\n      this.user = user;\n    }\n\n    this.isSaving = false;\n    this.resetForm(true);\n    this.alertService.success('Your account has been registered successfully.', 'Success');\n    this.onUserSaved.next(this.user);\n    this.router.navigate(['/confirm']);\n  }\n\n  private saveFailed(error: any) {\n    this.isSaving = false;\n    // this.alertService.error('One or more errors occured whilst saving your changes:',\n    //   'Save Error');\n    // this.alertService.error(null, error);\n    const errList = Utilities.getHttpResponseMessage(error);\n    if (error.status === 400) { // bad request (validation)\n      this.errors = errList;\n      this.alertService.error('Please fix the listed errors', 'Error');\n    } else {\n      this.errors = [];\n      this.alertService.error(error.status + ':' + errList[0].toString(), 'Error');\n    }\n  }\n\n  private addNewPasswordValidators() {\n    this.newPassword.setValidators([Validators.required, Validators.pattern(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W]).{8,}/)]);\n    this.confirmPassword.setValidators([Validators.required, EqualValidator('newPassword')]);\n  }\n\n  public ExistingCustomerChecked(event) {\n    this.isExisting = (this.isExisting === true) ? false : true;\n  }\n\n  private unlockUser() {\n    this.isSaving = true;\n    this.accountService.unblockUser(this.user.Id)\n      .subscribe(response => {\n          this.isSaving = false;\n          this.user.IsLockedOut = false;\n          this.userProfileForm.patchValue({\n            isLockedOut: this.user.IsLockedOut\n          });\n          this.alertService.success('User has been successfully unlocked', 'Success');\n        },\n        error => {\n          this.isSaving = false;\n          this.alertService.error('The below errors occured whilst unlocking the user:',\n            'Unblock Error');\n          this.alertService.error(null, error);\n        });\n  }\n\n  validateMinMax(min, max) {\n    return ['', [\n      Validators.required,\n      Validators.minLength(min),\n      Validators.maxLength(max),\n      Validators.pattern('[0-9]+')  //  digits only\n    ]];\n  }\n \n  get tin() {\n    return this.userProfileForm.get('tin');\n  }\n\n  get existingCustomer() {\n    return this.userProfileForm.get('isExistingCustomer');\n  }\n\n  get userName() {\n    return this.userProfileForm.get('userName');\n  }\n\n  get email() {\n    return this.userProfileForm.get('email');\n  }\n\n  get password() {\n    return this.userProfileForm.get('password');\n  }\n\n  get newPassword() {\n    return this.password.get('newPassword');\n  }\n\n  get confirmPassword() {\n    return this.password.get('confirmPassword');\n  }\n\n  get assignedRoles() {\n    return this.userProfileForm.get('roles');\n  }\n\n  get canViewRoles() {\n    return this.accountService.userHasPermission(Permission.viewRolesPermission);\n  }\n\n  get canAssignRoles() {\n    return this.accountService.userHasPermission(Permission.assignRolesPermission);\n  }\n\n  get isEditingSelf() {\n    return this.accountService.currentUser ? this.user.Id === this.accountService.currentUser.Id : false;\n  }\n\n  get floatLabels(): string {\n    return this.isEditMode ? 'auto' : 'always';\n  }\n \n}\n"],"sourceRoot":""}