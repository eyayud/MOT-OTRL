{"version":3,"sources":["webpack:///./src/@custor/models/permission.model.ts","webpack:///./src/@custor/services/security/account-endpoint.service.ts","webpack:///./src/@custor/services/security/account.service.ts"],"names":[],"mappings":";;;;;;;;;;AAkCA;AAAA;AAAA;IAyCE,oBAAY,IAAsB,EAAE,KAAwB,EAAE,SAAkB,EAAE,WAAoB;QACpG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IA7CsB,kCAAuB,GAAqB,gBAAgB,CAAC;IAC7D,oCAAyB,GAAqB,kBAAkB,CAAC;IAEjE,iCAAsB,GAAqB,eAAe,CAAC;IAC3D,mCAAwB,GAAqB,iBAAiB,CAAC;IAE/D,0BAAe,GAAqB,WAAW,CAAC;IAChD,sBAAW,GAAqB,aAAa,CAAC;IAE9C,iCAAsB,GAAqB,yBAAyB,CAAC;IACrE,mCAAwB,GAAqB,2BAA2B,CAAC;IAEzE,8BAAmB,GAAqB,YAAY,CAAC;IACrD,gCAAqB,GAAqB,cAAc,CAAC;IAEzD,8BAAmB,GAAqB,YAAY,CAAC;IACrD,gCAAqB,GAAqB,cAAc,CAAC;IACzD,gCAAqB,GAAqB,cAAc,CAAC;IAEzD,6CAAkC,GAAqB,yBAAyB,CAAC;IACjF,kCAAuB,GAAqB,0BAA0B,CAAC;IACvE,mCAAwB,GAAqB,2BAA2B,CAAC;IAEhG,yCAAyC;IAClB,2CAAgC,GAAqB,iBAAiB,CAAC;IACvE,2CAAgC,GAAqB,wBAAwB,CAAC;IAC9E,0CAA+B,GAAqB,uBAAuB,CAAC;IAC5E,8CAAmC,GAAqB,0BAA0B,CAAC;IAE1G,kCAAkC;IACX,oDAAyC,GAAqB,0BAA0B,CAAC;IACzF,kDAAuC,GAAqB,sBAAsB,CAAC;IACnF,+CAAoC,GAAqB,2BAA2B,CAAC;IAE5G,wBAAwB;IACD,wCAA6B,GAAqB,sBAAsB,CAAC;IAElG,iCAAiC;IACR,qCAA0B,GAAqB,WAAW,CAAC;IAapF,iBAAC;CAAA;AApDsB;;;;;;;;;;;;;;;;;;;;;;;ACjC6C;AAC1B;AACS;AACH;AAEW;AACG;AAG9D;IAAqC,yEAAe;IA2DlD,yBAAY,IAAgB,EAAE,cAAoC,EAAE,QAAkB;QAAtF,YACE,kBAAM,IAAI,EAAE,cAAc,EAAE,QAAQ,CAAC,SACtC;QA5DgB,eAAS,GAAW,mBAAmB,CAAC;QACzD,OAAO;QACP,oEAAoE;QACnD,kBAAY,GAAW,mBAAmB,CAAC;QAC3C,8BAAwB,GAAW,mBAAmB,CAAC;QACvD,wBAAkB,GAAW,4BAA4B,CAAC;QAC1D,qBAAe,GAAW,sBAAsB,CAAC;QACjD,gCAA0B,GAAW,kCAAkC,CAAC;QACxE,qBAAe,GAAW,2BAA2B,CAAC;QACtD,eAAS,GAAW,mBAAmB,CAAC;QACxC,wBAAkB,GAAW,wBAAwB,CAAC;QACtD,qBAAe,GAAW,yBAAyB,CAAC;QACpD,eAAS,GAAW,mCAAmC,CAAC;;IAgDzE,CAAC;IA9CD,sBAAI,qCAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;QACtD,CAAC;;;OAAA;IAED,sBAAI,wCAAW;aAAf;YACE,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC;QACzD,CAAC;;;OAAA;IAED,sBAAI,oDAAuB;aAA3B;YACE,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC;QACrE,CAAC;;;OAAA;IAED,sBAAI,8CAAiB;aAArB;YACE,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC/D,CAAC;;;OAAA;IAED,sBAAI,2CAAc;aAAlB;YACE,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5D,CAAC;;;OAAA;IAED,sBAAI,sDAAyB;aAA7B;YACE,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC,0BAA0B,CAAC;QACvE,CAAC;;;OAAA;IAED,sBAAI,2CAAc;aAAlB;YACE,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5D,CAAC;;;OAAA;IAED,sBAAI,qCAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;QACtD,CAAC;;;OAAA;IAED,sBAAI,8CAAiB;aAArB;YACE,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC/D,CAAC;;;OAAA;IAED,sBAAI,2CAAc;aAAlB;YACE,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5D,CAAC;;;OAAA;IAED,sBAAI,qCAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;QACtD,CAAC;;;OAAA;IAMD,yCAAe,GAAf,UAAmB,MAAe;QAChC,IAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAI,IAAI,CAAC,QAAQ,SAAI,MAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;QAChF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CACjE,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,mDAAyB,GAAzB,UAA6B,QAAgB;QAC3C,IAAM,WAAW,GAAM,IAAI,CAAC,iBAAiB,SAAI,QAAU,CAAC;QAE5D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CACjE,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,0CAAgB,GAAhB,UAAoB,IAAa,EAAE,QAAiB;QAElD,IAAM,WAAW,GAAG,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAI,IAAI,CAAC,QAAQ,SAAI,IAAI,SAAI,QAAU,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;QAE9F,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CACjE,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,4CAAkB,GAAlB,UAAsB,UAAe;QACnC,iCAAiC;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAChG,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAC/D,CAAC;IACJ,CAAC;IAED,+CAAqB,GAArB,UAAyB,UAAe;QACtC,iCAAiC;QACjC,2CAA2C;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CACnG,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAC/D,CAAC;IACJ,CAAC;IAED,2DAAiC,GAAjC,UAAqC,UAAe;QAClD,6CAA6C;QAC7C,2CAA2C;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAC/G,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAC/D,CAAC;IACJ,CAAC;IAED,+CAAqB,GAArB,UAAyB,UAAe,EAAE,MAAe;QACvD,IAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAI,IAAI,CAAC,QAAQ,SAAI,MAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;QAEhF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAC7F,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAAC,CAAC;IACpE,CAAC;IAID,oDAA0B,GAA1B,UAA8B,YAAiB,EAAE,UAAmB,EAAE,IAAa,EAAE,IAAU,EAAE,MAAe;QAC9G,IAAI,WAAmB,CAAC;QACxB,IAAI,aAAiB,CAAC;QAEtB,IAAI,IAAI,EAAE;YACR,WAAW,GAAG,MAAM,CAAC,CAAC,CAAI,IAAI,CAAC,QAAQ,SAAI,MAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;YAC1E,aAAa,GAAG,IAAI,CAAC,CAAC;gBACpB,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;gBACzE,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAC,CAAC,CAAC;SAC7D;aAAM;YACL,WAAW,GAAG,UAAU,CAAC,CAAC,CAAI,IAAI,CAAC,QAAQ,SAAI,UAAY,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;YAClF,aAAa,GAAG,YAAY,CAAC;SAC9B;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAI,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAClG,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,oDAA0B,GAA1B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CACpF,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,0DAAgC,GAAhC,UAAoC,aAAqB;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CACnH,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,gDAAsB,GAAtB,UAA0B,MAAc;QACtC,IAAM,WAAW,GAAM,IAAI,CAAC,cAAc,SAAI,MAAQ,CAAC;QAEvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CACvE,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,+CAAqB,GAArB,UAAyB,MAAc;QACrC,IAAM,WAAW,GAAM,IAAI,CAAC,QAAQ,SAAI,MAAQ,CAAC;QAEjD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CACpE,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,yCAAe,GAAf,UAAmB,MAAc;QAC/B,IAAM,WAAW,GAAM,IAAI,CAAC,QAAQ,SAAI,MAAQ,CAAC;QAEjD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CACjE,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,mDAAyB,GAAzB,UAA6B,QAAgB;QAC3C,IAAM,WAAW,GAAM,IAAI,CAAC,iBAAiB,SAAI,QAAU,CAAC;QAE5D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CACjE,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,0CAAgB,GAAhB,UAAoB,IAAa,EAAE,QAAiB;QAClD,IAAM,WAAW,GAAG,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAI,IAAI,CAAC,QAAQ,SAAI,IAAI,SAAI,QAAU,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;QAE9F,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CACjE,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,4CAAkB,GAAlB,UAAsB,UAAe;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAChG,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,+CAAqB,GAArB,UAAyB,UAAe,EAAE,MAAc;QACtD,IAAM,WAAW,GAAM,IAAI,CAAC,QAAQ,SAAI,MAAQ,CAAC;QAEjD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAC7F,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,+CAAqB,GAArB,UAAyB,MAAc;QAAvC,iBAOC;QANC,IAAM,WAAW,GAAM,IAAI,CAAC,QAAQ,SAAI,MAAQ,CAAC;QAEjD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CACpE,iEAAU,CAAC,eAAK;YACd,OAAO,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,cAAM,YAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,EAAlC,CAAkC,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,gDAAsB,GAAtB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CACzE,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,kDAAwB,GAAxB,UAA4B,UAAe;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAChG,iEAAU,CAAC,aAAG,IAAI,8DAAoB,CAAC,GAAG,IAAI,cAAc,CAAC,EAA3C,CAA2C,CAAC,CAAC,CAAC;IACpE,CAAC;IAhNU,eAAe;QAD3B,gEAAU,EAAE;+EA4DO,+DAAU,EAAkB,2EAAoB,EAAY,sDAAQ;OA3D3E,eAAe,CAiN3B;IAAD,sBAAC;CAAA,CAjNoC,yEAAe,GAiNnD;AAjN2B;;;;;;;;;;;;;;;;;;;;;;;;ACV6C;AAC5B;AACJ;AACF;AACS;AACW;AAChB;AAc3C;IAQE,wBACU,MAAc,EACd,IAAgB,EAChB,WAAwB,EACxB,eAAgC;QAHhC,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAPlC,kBAAa,GAAG,IAAI,4CAAO,EAAwB,CAAC;QAC5D,aAAQ,GAAG,YAAY,CAAC;IAOxB,CAAC;uBAbU,cAAc;IAezB,gCAAO,GAAP,UAAQ,MAAe;QACrB,OAAO,IAAI,CAAC,eAAe,CAAC,eAAe,CAAO,MAAM,CAAC,CAAC;IAC5D,CAAC;IAED,wCAAe,GAAf,UAAgB,MAAe;QAC7B,OAAO,qDAAkB,CACvB,IAAI,CAAC,eAAe,CAAC,eAAe,CAAO,MAAM,CAAC,EAClD,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAU,CAAC,CAAC;IACrD,CAAC;IAED,iCAAQ,GAAR,UAAS,IAAa,EAAE,QAAiB;QAEvC,OAAO,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAS,IAAI,EAAE,QAAQ,CAAC,CAAC;IACvE,CAAC;IAED,yCAAgB,GAAhB,UAAiB,IAAa,EAAE,QAAiB;QAC/C,OAAO,qDAAkB,CACvB,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAS,IAAI,EAAE,QAAQ,CAAC,EAC7D,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAU,CAAC,CAAC;IACrD,CAAC;IAED,mCAAU,GAAV,UAAW,IAAc;QAAzB,iBAUC;QATC,IAAI,IAAI,CAAC,EAAE,EAAE;YACX,OAAO,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SAClE;aAAM;YACL,OAAO,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC7E,+DAAQ,CAAC,mBAAS;gBAChB,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;gBACvB,OAAO,KAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC,CAAC;SACP;IACH,CAAC;IAGD,gCAAO,GAAP,UAAQ,IAAc;QACpB,uBAAuB;QACvB,8DAA8D;QAC9D,OAAO,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAO,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,6CAA6C;IAC7C,4CAAmB,GAAnB,UAAoB,IAAc;QAChC,uBAAuB;QACvB,8DAA8D;QAC9D,OAAO,IAAI,CAAC,eAAe,CAAC,iCAAiC,CAAO,IAAI,CAAC,CAAC;IAC5E,CAAC;IAED,2CAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,eAAe,CAAC,0BAA0B,EAAU,CAAC;IACnE,CAAC;IAED,8CAAqB,GAArB,UAAsB,aAAqB;QACzC,OAAO,IAAI,CAAC,eAAe,CAAC,gCAAgC,CAAC,aAAa,CAAC,CAAC;IAC9E,CAAC;IAED,mCAAU,GAAV,UAAW,YAA2B;QAAtC,iBAYC;QAXC,IAAI,OAAO,YAAY,KAAK,QAAQ,IAAI,YAAY,YAAY,MAAM,EAAE;YACtE,OAAO,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAe,YAAY,CAAC,CAAC,IAAI,CAChF,0DAAG,CAAC,cAAI,IAAI,YAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAxC,CAAwC,CAAC,CAAC,CAAC;SAC1D;aAAM;YACL,IAAI,YAAY,CAAC,EAAE,EAAE;gBACnB,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;aACzC;iBAAM;gBACL,OAAO,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAO,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,CACrF,+DAAQ,CAAC,cAAI,IAAI,YAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,EAAxB,CAAwB,CAAC,CAAC,CAAC;aAC/C;SACF;IACH,CAAC;IAED,oCAAW,GAAX,UAAY,MAAc;QACxB,OAAO,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;IAC7D,CAAC;IAED,0CAAiB,GAAjB,UAAkB,eAAiC;QACjD,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,KAAK,eAAe,EAArB,CAAqB,CAAC,CAAC;IAC3D,CAAC;IAED,4CAAmB,GAAnB;QACE,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IACzC,CAAC;IAED,iCAAQ,GAAR,UAAS,IAAa,EAAE,QAAiB;QACvC,OAAO,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAS,IAAI,EAAE,QAAQ,CAAC,CAAC;IACvE,CAAC;IAED,+CAAsB,GAAtB,UAAuB,IAAa,EAAE,QAAiB;QACrD,OAAO,qDAAkB,CACvB,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAS,IAAI,EAAE,QAAQ,CAAC,EAC7D,IAAI,CAAC,eAAe,CAAC,sBAAsB,EAAgB,CAAC,CAAC;IACjE,CAAC;IAED,mCAAU,GAAV,UAAW,IAAU;QAArB,iBAYC;QAXC,IAAI,IAAI,CAAC,EAAE,EAAE;YACX,OAAO,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CACnE,0DAAG,CAAC,cAAI,IAAI,YAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,EAAE,gBAAc,CAAC,qBAAqB,CAAC,EAAjE,CAAiE,CAAC,CAAC,CAAC;SACnF;aAAM;YACL,OAAO,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAO,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CACzE,+DAAQ,CAAC,mBAAS;gBAChB,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;gBACvB,OAAO,KAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;YACnE,CAAC,CAAC,EACF,0DAAG,CAAC,cAAI,IAAI,YAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,EAAE,gBAAc,CAAC,qBAAqB,CAAC,EAAjE,CAAiE,CAAC,CAAC,CAAC;SACnF;IACH,CAAC;IAED,gCAAO,GAAP,UAAQ,IAAU;QAAlB,iBAGC;QAFC,OAAO,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAO,IAAI,CAAC,CAAC,IAAI,CAC7D,0DAAG,CAAC,cAAI,IAAI,YAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,EAAE,gBAAc,CAAC,kBAAkB,CAAC,EAA9D,CAA8D,CAAC,CAAC,CAAC;IACjF,CAAC;IAED,mCAAU,GAAV,UAAW,YAA2B;QAAtC,iBAYC;QAXC,IAAI,OAAO,YAAY,KAAK,QAAQ,IAAI,YAAY,YAAY,MAAM,EAAE;YACtE,OAAO,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAe,YAAY,CAAC,CAAC,IAAI,CAChF,0DAAG,CAAC,cAAI,IAAI,YAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,EAAE,gBAAc,CAAC,oBAAoB,CAAC,EAAhE,CAAgE,CAAC,CAAC,CAAC;SAClF;aAAM;YACL,IAAI,YAAY,CAAC,EAAE,EAAE;gBACnB,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;aACzC;iBAAM;gBACL,OAAO,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAO,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CACjF,+DAAQ,CAAC,cAAI,IAAI,YAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,EAAxB,CAAwB,CAAC,CAAC,CAAC;aAC/C;SACF;IACH,CAAC;IAED,uCAAc,GAAd;QACE,OAAO,IAAI,CAAC,eAAe,CAAC,sBAAsB,EAAgB,CAAC;IACrE,CAAC;IAEO,uCAAc,GAAtB,UAAuB,KAAwB,EAAE,EAAyB;QACxE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,gDAAuB,GAAvB,UAAwB,KAAwB;QAC9C,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,gBAAc,CAAC,qBAAqB,CAAC,CAAC;IAC1E,CAAC;IAED,6CAAoB,GAApB;QACE,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;IAC3C,CAAC;IAED,sBAAI,uCAAW;aAAf;YACE,OAAO,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC;QAC1C,CAAC;;;OAAA;IAED,sBAAI,uCAAW;aAAf;YACE,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QACtC,CAAC;;;OAAA;IAED,iBAAiB;IACjB,iBAAiB;IACjB,IAAI;IAEJ,oCAAW,GAAX;QACE,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;YAC/B,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE;gBAC/C,OAAO,IAAI,CAAC;aACb;SACF;IACH,CAAC;IAGD,qCAAY,GAAZ,UAAa,IAAc;QACzB,OAAO,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;;IAjLsB,iCAAkB,GAA0B,KAAK,CAAC;IAClD,mCAAoB,GAA0B,QAAQ,CAAC;IACvD,oCAAqB,GAA0B,QAAQ,CAAC;IAHpE,cAAc;QAD1B,gEAAU,EAAE;+EAUO,sDAAM;YACR,+DAAU;YACH,yDAAW;YACP,yEAAe;OAZ/B,cAAc,CA8L1B;IAAD,qBAAC;CAAA;AA9L0B","file":"default~auth-auth-module~main-main-module.js","sourcesContent":["export type PermissionNames =\r\n  'View Investors' | 'Manage Investors' |\r\n  'View Users' | 'Manage Users' |\r\n  'View Roles' | 'Manage Roles' | 'Assign Roles' |\r\n  'View Projects' | 'Manage Projects' |\r\n  'View Tasks' | 'Manage Tasks' |\r\n  'View Service Application' | 'Manage Service Application' |\r\n  'Manage Site Administrators' | 'Manage Settings' | 'Manage Lookups'\r\n  ;\r\n\r\nexport type PermissionValues =\r\n  'investors.view' | 'investors.manage' |\r\n  'users.view' | 'users.manage' |\r\n  'roles.view' | 'roles.manage' | 'roles.assign' |\r\n  'projects.view' | 'projects.manage' |\r\n  'task.view' | 'task.manage' |\r\n\r\n  'services.manage' | 'services.manage' |\r\n  'customerProfile.manage' | 'customerProfile.manage' |\r\n  'projectProfile.manage' | 'projectProfile.manage' |\r\n  'licensingServices.manage' | 'licensingServices.manage' |\r\n\r\n\r\n  'incentiveServices.manage' | 'incentiveServices.manage' |\r\n  'uploadedItems.manage' | 'uploadedItems.manage' |\r\n  'incentivesServices.manage' | 'incentivesServices.manage' |\r\n\r\n  'aftercareData.manage' | 'aftercareData.manage' |\r\n\r\n  'data.View' | 'data.View' |\r\n\r\n  'serviceApplication.view' | 'serviceApplication.manage' |\r\n  'superadmin.manageAdmins' | 'superadmin.manageLookups' | 'superadmin.manageSettings'   ;\r\n\r\nexport class Permission {\r\n  public static readonly viewInvestorsPermission: PermissionValues = 'investors.view';\r\n  public static readonly manageInvestorsPermission: PermissionValues = 'investors.manage';\r\n\r\n  public static readonly viewProjectsPermission: PermissionValues = 'projects.view';\r\n  public static readonly manageProjectsPermission: PermissionValues = 'projects.manage';\r\n\r\n  public static readonly viewServiceList: PermissionValues = 'task.view';\r\n  public static readonly manageTasks: PermissionValues = 'task.manage';\r\n\r\n  public static readonly viewServiceApplication: PermissionValues = 'serviceApplication.view';\r\n  public static readonly manageServiceApplication: PermissionValues = 'serviceApplication.manage';\r\n\r\n  public static readonly viewUsersPermission: PermissionValues = 'users.view';\r\n  public static readonly manageUsersPermission: PermissionValues = 'users.manage';\r\n\r\n  public static readonly viewRolesPermission: PermissionValues = 'roles.view';\r\n  public static readonly manageRolesPermission: PermissionValues = 'roles.manage';\r\n  public static readonly assignRolesPermission: PermissionValues = 'roles.assign';\r\n\r\n  public static readonly manageSiteAdministratorsPermission: PermissionValues = 'superadmin.manageAdmins';\r\n  public static readonly manageLookupsPermission: PermissionValues = 'superadmin.manageLookups';\r\n  public static readonly manageSettingsPermission: PermissionValues = 'superadmin.manageSettings';\r\n\r\n  // Registration and Licensing Permissions\r\n  public static readonly ManageAssignedServicesPermission: PermissionValues = 'services.manage';\r\n  public static readonly ManageCustomerProfilesPermission: PermissionValues = 'customerProfile.manage';\r\n  public static readonly ManageProjectProfilesPermission: PermissionValues = 'projectProfile.manage';\r\n  public static readonly DispatchLicensingServicesPermission: PermissionValues = 'licensingServices.manage';\r\n\r\n  // Incentive Management Permission\r\n  public static readonly ManageIncentiveAssignedServicesPermission: PermissionValues = 'incentiveServices.manage';\r\n  public static readonly ApproveIncentiveUploadedItemsPermission: PermissionValues = 'uploadedItems.manage';\r\n  public static readonly DispatchIncentivesServicesPermission: PermissionValues = 'incentivesServices.manage';\r\n\r\n  // Manage Aftercare Data\r\n  public static readonly ManageAftercareDataPermission: PermissionValues = 'aftercareData.manage';\r\n\r\n// Management Services Permission\r\n  public static readonly ViewReadOnlyDataPermission: PermissionValues = 'data.View';\r\n\r\n  constructor(name?: PermissionNames, value?: PermissionValues, groupName?: string, description?: string) {\r\n    this.Name = name;\r\n    this.Value = value;\r\n    this.GroupName = groupName;\r\n    this.Description = description;\r\n  }\r\n\r\n  public Name: PermissionNames;\r\n  public Value: PermissionValues;\r\n  public GroupName: string;\r\n  public Description: string;\r\n}\r\n","\r\nimport {throwError as observableThrowError, Observable} from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {Injectable, Injector} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {EndpointFactory} from './endpoint-factory.service';\r\nimport {ConfigurationService} from '../configuration.service';\r\n\r\n@Injectable()\r\nexport class AccountEndpoint extends EndpointFactory {\r\n  private readonly _usersUrl: string = 'api/account/users';\r\n  // Todo\r\n  // private readonly _usersAddUrl: string = '/api/account/users/add';\r\n  private readonly _usersAddUrl: string = 'api/account/users';\r\n  private readonly _selfRegisterUsersAddUrl: string = 'api/account/users';\r\n  private readonly _userByUserNameUrl: string = 'api/account/users/username';\r\n  private readonly _currentUserUrl: string = 'api/account/users/me';\r\n  private readonly _currentUserPreferencesUrl: string = 'api/account/users/me/preferences';\r\n  private readonly _unblockUserUrl: string = 'api/account/users/unblock';\r\n  private readonly _rolesUrl: string = 'api/account/roles';\r\n  private readonly _roleByRoleNameUrl: string = 'api/account/roles/name';\r\n  private readonly _permissionsUrl: string = 'api/account/permissions';\r\n  private readonly _resetUrl: string = 'api/account/ChangeOrResetPassword';\r\n\r\n  get usersUrl() {\r\n    return this.configurations.baseUrl + this._usersUrl;\r\n  }\r\n\r\n  get usersAddUrl() {\r\n    return this.configurations.baseUrl + this._usersAddUrl;\r\n  }\r\n\r\n  get selfRegisterUsersAddUrl() {\r\n    return this.configurations.baseUrl + this._selfRegisterUsersAddUrl;\r\n  }\r\n\r\n  get userByUserNameUrl() {\r\n    return this.configurations.baseUrl + this._userByUserNameUrl;\r\n  }\r\n\r\n  get currentUserUrl() {\r\n    return this.configurations.baseUrl + this._currentUserUrl;\r\n  }\r\n\r\n  get currentUserPreferencesUrl() {\r\n    return this.configurations.baseUrl + this._currentUserPreferencesUrl;\r\n  }\r\n\r\n  get unblockUserUrl() {\r\n    return this.configurations.baseUrl + this._unblockUserUrl;\r\n  }\r\n\r\n  get rolesUrl() {\r\n    return this.configurations.baseUrl + this._rolesUrl;\r\n  }\r\n\r\n  get roleByRoleNameUrl() {\r\n    return this.configurations.baseUrl + this._roleByRoleNameUrl;\r\n  }\r\n\r\n  get permissionsUrl() {\r\n    return this.configurations.baseUrl + this._permissionsUrl;\r\n  }\r\n\r\n  get resetUrl() {\r\n    return this.configurations.baseUrl + this._resetUrl;\r\n  }\r\n\r\n  constructor(http: HttpClient, configurations: ConfigurationService, injector: Injector) {\r\n    super(http, configurations, injector);\r\n  }\r\n\r\n  getUserEndpoint<T>(userId?: string): Observable<T> {\r\n    const endpointUrl = userId ? `${this.usersUrl}/${userId}` : this.currentUserUrl;\r\n    return this.http.get<T>(endpointUrl, this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error')));\r\n  }\r\n\r\n  getUserByUserNameEndpoint<T>(userName: string): Observable<T> {\r\n    const endpointUrl = `${this.userByUserNameUrl}/${userName}`;\r\n\r\n    return this.http.get<T>(endpointUrl, this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error')));\r\n  }\r\n\r\n  getUsersEndpoint<T>(page?: number, pageSize?: number): Observable<T> {\r\n\r\n    const endpointUrl = page && pageSize ? `${this.usersUrl}/${page}/${pageSize}` : this.usersUrl;\r\n\r\n    return this.http.get<T>(endpointUrl, this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error')));\r\n  }\r\n\r\n  getNewUserEndpoint<T>(userObject: any): Observable<T> {\r\n    // console.log(this.usersAddUrl);\r\n    return this.http.post<T>(this.usersUrl, JSON.stringify(userObject), this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error'))\r\n    );\r\n  }\r\n\r\n  getAddNewUserEndpoint<T>(userObject: any): Observable<T> {\r\n    // console.log(this.usersAddUrl);\r\n    // console.log(JSON.stringify(userObject));\r\n    return this.http.post<T>(this.usersAddUrl, JSON.stringify(userObject), this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error'))\r\n    );\r\n  }\r\n\r\n  getSelfRegisterAddNewUserEndpoint<T>(userObject: any): Observable<T> {\r\n    // console.log(this.selfRegisterUsersAddUrl);\r\n    // console.log(JSON.stringify(userObject));\r\n    return this.http.post<T>(this.selfRegisterUsersAddUrl, JSON.stringify(userObject), this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error'))\r\n    );\r\n  }\r\n\r\n  getUpdateUserEndpoint<T>(userObject: any, userId?: string): Observable<T> {\r\n    const endpointUrl = userId ? `${this.usersUrl}/${userId}` : this.currentUserUrl;\r\n\r\n    return this.http.put<T>(endpointUrl, JSON.stringify(userObject), this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error')));\r\n  }\r\n\r\n  getPatchUpdateUserEndpoint<T>(patch: {}, userId?: string): Observable<T>;\r\n  getPatchUpdateUserEndpoint<T>(value: any, op: string, path: string, from?: any, userId?: string): Observable<T>;\r\n  getPatchUpdateUserEndpoint<T>(valueOrPatch: any, opOrUserId?: string, path?: string, from?: any, userId?: string): Observable<T> {\r\n    let endpointUrl: string;\r\n    let patchDocument: {};\r\n\r\n    if (path) {\r\n      endpointUrl = userId ? `${this.usersUrl}/${userId}` : this.currentUserUrl;\r\n      patchDocument = from ?\r\n        [{'value': valueOrPatch, 'path': path, 'op': opOrUserId, 'from': from}] :\r\n        [{'value': valueOrPatch, 'path': path, 'op': opOrUserId}];\r\n    } else {\r\n      endpointUrl = opOrUserId ? `${this.usersUrl}/${opOrUserId}` : this.currentUserUrl;\r\n      patchDocument = valueOrPatch;\r\n    }\r\n\r\n    return this.http.patch<T>(endpointUrl, JSON.stringify(patchDocument), this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error')));\r\n  }\r\n\r\n  getUserPreferencesEndpoint<T>(): Observable<T> {\r\n    return this.http.get<T>(this.currentUserPreferencesUrl, this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error')));\r\n  }\r\n\r\n  getUpdateUserPreferencesEndpoint<T>(configuration: string): Observable<T> {\r\n    return this.http.put<T>(this.currentUserPreferencesUrl, JSON.stringify(configuration), this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error')));\r\n  }\r\n\r\n  getUnblockUserEndpoint<T>(userId: string): Observable<T> {\r\n    const endpointUrl = `${this.unblockUserUrl}/${userId}`;\r\n\r\n    return this.http.put<T>(endpointUrl, null, this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error')));\r\n  }\r\n\r\n  getDeleteUserEndpoint<T>(userId: string): Observable<T> {\r\n    const endpointUrl = `${this.usersUrl}/${userId}`;\r\n\r\n    return this.http.delete<T>(endpointUrl, this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error')));\r\n  }\r\n\r\n  getRoleEndpoint<T>(roleId: string): Observable<T> {\r\n    const endpointUrl = `${this.rolesUrl}/${roleId}`;\r\n\r\n    return this.http.get<T>(endpointUrl, this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error')));\r\n  }\r\n\r\n  getRoleByRoleNameEndpoint<T>(roleName: string): Observable<T> {\r\n    const endpointUrl = `${this.roleByRoleNameUrl}/${roleName}`;\r\n\r\n    return this.http.get<T>(endpointUrl, this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error')));\r\n  }\r\n\r\n  getRolesEndpoint<T>(page?: number, pageSize?: number): Observable<T> {\r\n    const endpointUrl = page && pageSize ? `${this.rolesUrl}/${page}/${pageSize}` : this.rolesUrl;\r\n\r\n    return this.http.get<T>(endpointUrl, this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error')));\r\n  }\r\n\r\n  getNewRoleEndpoint<T>(roleObject: any): Observable<T> {\r\n    return this.http.post<T>(this.rolesUrl, JSON.stringify(roleObject), this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error')));\r\n  }\r\n\r\n  getUpdateRoleEndpoint<T>(roleObject: any, roleId: string): Observable<T> {\r\n    const endpointUrl = `${this.rolesUrl}/${roleId}`;\r\n\r\n    return this.http.put<T>(endpointUrl, JSON.stringify(roleObject), this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error')));\r\n  }\r\n\r\n  getDeleteRoleEndpoint<T>(roleId: string): Observable<T> {\r\n    const endpointUrl = `${this.rolesUrl}/${roleId}`;\r\n\r\n    return this.http.delete<T>(endpointUrl, this.getRequestHeaders()).pipe(\r\n      catchError(error => {\r\n        return this.handleError(error, () => this.getDeleteRoleEndpoint(roleId));\r\n      }));\r\n  }\r\n\r\n  getPermissionsEndpoint<T>(): Observable<T> {\r\n    return this.http.get<T>(this.permissionsUrl, this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error')));\r\n  }\r\n\r\n  getResetPasswordEndpoint<T>(userObject: any): Observable<T> {\r\n    return this.http.post<T>(this.resetUrl, JSON.stringify(userObject), this.getRequestHeaders()).pipe(\r\n      catchError(err => observableThrowError(err || 'Server error')));\r\n  }\r\n}\r\n","import {Observable, Subject, forkJoin as observableForkJoin} from 'rxjs';\r\nimport {mergeMap, tap} from 'rxjs/operators';\r\nimport {Injectable} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {AccountEndpoint} from './account-endpoint.service';\r\nimport {AuthService} from './auth.service';\r\nimport {User} from '../../models/user.model';\r\nimport {Role} from '../../models/role.model';\r\nimport {Permission, PermissionValues} from '../../models/permission.model';\r\nimport {UserEdit} from '../../models/user-edit.model';\r\n\r\nexport type RolesChangedOperation = 'add' | 'delete' | 'modify';\r\n\r\nexport interface RolesChangedEventArg {\r\n  roles: Role[] | string[];\r\n  operation: RolesChangedOperation;\r\n}\r\n\r\n@Injectable()\r\nexport class AccountService {\r\n  public static readonly roleAddedOperation: RolesChangedOperation = 'add';\r\n  public static readonly roleDeletedOperation: RolesChangedOperation = 'delete';\r\n  public static readonly roleModifiedOperation: RolesChangedOperation = 'modify';\r\n\r\n  private _rolesChanged = new Subject<RolesChangedEventArg>();\r\n  userType = 'OnlineSite';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private authService: AuthService,\r\n    private accountEndpoint: AccountEndpoint) {\r\n  }\r\n\r\n  getUser(userId?: string) {\r\n    return this.accountEndpoint.getUserEndpoint<User>(userId);\r\n  }\r\n\r\n  getUserAndRoles(userId?: string) {\r\n    return observableForkJoin(\r\n      this.accountEndpoint.getUserEndpoint<User>(userId),\r\n      this.accountEndpoint.getRolesEndpoint<Role[]>());\r\n  }\r\n\r\n  getUsers(page?: number, pageSize?: number) {\r\n\r\n    return this.accountEndpoint.getUsersEndpoint<User[]>(page, pageSize);\r\n  }\r\n\r\n  getUsersAndRoles(page?: number, pageSize?: number) {\r\n    return observableForkJoin(\r\n      this.accountEndpoint.getUsersEndpoint<User[]>(page, pageSize),\r\n      this.accountEndpoint.getRolesEndpoint<Role[]>());\r\n  }\r\n\r\n  updateUser(user: UserEdit) {\r\n    if (user.Id) {\r\n      return this.accountEndpoint.getUpdateUserEndpoint(user, user.Id);\r\n    } else {\r\n      return this.accountEndpoint.getUserByUserNameEndpoint<User>(user.UserName).pipe(\r\n        mergeMap(foundUser => {\r\n          user.Id = foundUser.Id;\r\n          return this.accountEndpoint.getUpdateUserEndpoint(user, user.Id);\r\n        }));\r\n    }\r\n  }\r\n\r\n\r\n  newUser(user: UserEdit) {\r\n    // console.debug(user);\r\n    // return this.accountEndpoint.getNewUserEndpoint<User>(user);\r\n    return this.accountEndpoint.getAddNewUserEndpoint<User>(user);\r\n  }\r\n\r\n  // Todo check for authorized and unauthorized\r\n  selfRegisterNewUser(user: UserEdit) {\r\n    // console.debug(user);\r\n    // return this.accountEndpoint.getNewUserEndpoint<User>(user);\r\n    return this.accountEndpoint.getSelfRegisterAddNewUserEndpoint<User>(user);\r\n  }\r\n\r\n  getUserPreferences() {\r\n    return this.accountEndpoint.getUserPreferencesEndpoint<string>();\r\n  }\r\n\r\n  updateUserPreferences(configuration: string) {\r\n    return this.accountEndpoint.getUpdateUserPreferencesEndpoint(configuration);\r\n  }\r\n\r\n  deleteUser(userOrUserId: string | User): Observable<User> {\r\n    if (typeof userOrUserId === 'string' || userOrUserId instanceof String) {\r\n      return this.accountEndpoint.getDeleteUserEndpoint<User>(<string>userOrUserId).pipe(\r\n        tap(data => this.onRolesUserCountChanged(data.Roles)));\r\n    } else {\r\n      if (userOrUserId.Id) {\r\n        return this.deleteUser(userOrUserId.Id);\r\n      } else {\r\n        return this.accountEndpoint.getUserByUserNameEndpoint<User>(userOrUserId.UserName).pipe(\r\n          mergeMap(user => this.deleteUser(user.Id)));\r\n      }\r\n    }\r\n  }\r\n\r\n  unblockUser(userId: string) {\r\n    return this.accountEndpoint.getUnblockUserEndpoint(userId);\r\n  }\r\n\r\n  userHasPermission(permissionValue: PermissionValues): boolean {\r\n    return this.permissions.some(p => p === permissionValue);\r\n  }\r\n\r\n  refreshLoggedInUser() {\r\n    return this.authService.refreshLogin();\r\n  }\r\n\r\n  getRoles(page?: number, pageSize?: number) {\r\n    return this.accountEndpoint.getRolesEndpoint<Role[]>(page, pageSize);\r\n  }\r\n\r\n  getRolesAndPermissions(page?: number, pageSize?: number) {\r\n    return observableForkJoin(\r\n      this.accountEndpoint.getRolesEndpoint<Role[]>(page, pageSize),\r\n      this.accountEndpoint.getPermissionsEndpoint<Permission[]>());\r\n  }\r\n\r\n  updateRole(role: Role) {\r\n    if (role.id) {\r\n      return this.accountEndpoint.getUpdateRoleEndpoint(role, role.id).pipe(\r\n        tap(data => this.onRolesChanged([role], AccountService.roleModifiedOperation)));\r\n    } else {\r\n      return this.accountEndpoint.getRoleByRoleNameEndpoint<Role>(role.name).pipe(\r\n        mergeMap(foundRole => {\r\n          role.id = foundRole.id;\r\n          return this.accountEndpoint.getUpdateRoleEndpoint(role, role.id);\r\n        }),\r\n        tap(data => this.onRolesChanged([role], AccountService.roleModifiedOperation)));\r\n    }\r\n  }\r\n\r\n  newRole(role: Role) {\r\n    return this.accountEndpoint.getNewRoleEndpoint<Role>(role).pipe(\r\n      tap(data => this.onRolesChanged([role], AccountService.roleAddedOperation)));\r\n  }\r\n\r\n  deleteRole(roleOrRoleId: string | Role): Observable<Role> {\r\n    if (typeof roleOrRoleId === 'string' || roleOrRoleId instanceof String) {\r\n      return this.accountEndpoint.getDeleteRoleEndpoint<Role>(<string>roleOrRoleId).pipe(\r\n        tap(data => this.onRolesChanged([data], AccountService.roleDeletedOperation)));\r\n    } else {\r\n      if (roleOrRoleId.id) {\r\n        return this.deleteRole(roleOrRoleId.id);\r\n      } else {\r\n        return this.accountEndpoint.getRoleByRoleNameEndpoint<Role>(roleOrRoleId.name).pipe(\r\n          mergeMap(role => this.deleteRole(role.id)));\r\n      }\r\n    }\r\n  }\r\n\r\n  getPermissions() {\r\n    return this.accountEndpoint.getPermissionsEndpoint<Permission[]>();\r\n  }\r\n\r\n  private onRolesChanged(roles: Role[] | string[], op: RolesChangedOperation) {\r\n    this._rolesChanged.next({ roles: roles, operation: op });\r\n  }\r\n\r\n  onRolesUserCountChanged(roles: Role[] | string[]) {\r\n    return this.onRolesChanged(roles, AccountService.roleModifiedOperation);\r\n  }\r\n\r\n  getRolesChangedEvent(): Observable<RolesChangedEventArg> {\r\n    return this._rolesChanged.asObservable();\r\n  }\r\n\r\n  get permissions(): PermissionValues[] {\r\n    return this.authService.userPermissions;\r\n  }\r\n\r\n  get currentUser() {\r\n    return this.authService.currentUser;\r\n  }\r\n\r\n  // isInvestor() {\r\n  //   return true;\r\n  // }\r\n\r\n  getUserType() {\r\n    if (this.authService.isLoggedIn) {\r\n      if (this.currentUser.SiteCode === this.userType) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  resetAccount(user: UserEdit) {\r\n    return this.accountEndpoint.getResetPasswordEndpoint(user);\r\n  }\r\n\r\n  // resetAccount(user: UserEdit): Observable<any> {\r\n\r\n  //   return this.http.post<any>(this.appConfig.urls.url('resetPassword', user,  this.getRequestHeaders())).pipe(\r\n  //   );\r\n  // }\r\n  // resetAccount(email: string): Observable<any> {\r\n\r\n  //   return this.http.get<any>(this.appConfig.urls.url('resetPassword', email)).pipe(\r\n  //   );\r\n  // }\r\n}\r\n"],"sourceRoot":""}