// <auto-generated />
using System;
using CUSTOR.OTRLS.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CUSTOR.OTRLS.API.Migrations
{
    [DbContext(typeof(OTRLSDbContext))]
    partial class OTRLSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CUSTOR.OTRLS.Core.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressType");

                    b.Property<string>("CellPhoneNo")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(256);

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("Fax")
                        .HasMaxLength(50);

                    b.Property<string>("HouseNo")
                        .HasMaxLength(50);

                    b.Property<int?>("IndustrialParkId");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool?>("IsIndustrialPark");

                    b.Property<bool>("IsMainOffice");

                    b.Property<string>("KebeleId")
                        .HasMaxLength(50);

                    b.Property<Guid?>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("OtherAddress")
                        .HasMaxLength(1000);

                    b.Property<int>("ParentId");

                    b.Property<string>("Pobox")
                        .HasMaxLength(50);

                    b.Property<string>("RegionId")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasMaxLength(1000);

                    b.Property<string>("SpecificAreaName")
                        .HasMaxLength(250);

                    b.Property<string>("TeleNo")
                        .HasMaxLength(50);

                    b.Property<string>("TownId")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUserId")
                        .HasMaxLength(256);

                    b.Property<string>("WoredaId")
                        .HasMaxLength(50);

                    b.Property<string>("ZoneId")
                        .HasMaxLength(50);

                    b.HasKey("AddressId");

                    b.HasIndex("KebeleId");

                    b.HasIndex("RegionId");

                    b.HasIndex("WoredaId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("CUSTOR.OTRLS.Core.CustomerProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<DateTime>("BirthDate");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("FatherName");

                    b.Property<string>("FatherNameEng");

                    b.Property<string>("FirstName");

                    b.Property<string>("FirstNameEng");

                    b.Property<int>("Gender");

                    b.Property<string>("GrandName");

                    b.Property<string>("GrandNameEng");

                    b.Property<int>("IdentificationId");

                    b.Property<string>("MotherName");

                    b.Property<string>("MotherNameEng");

                    b.Property<int>("Nationality");

                    b.Property<string>("Tin");

                    b.Property<int?>("Title");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("CustomerProfile");
                });

            modelBuilder.Entity("CUSTOR.OTRLS.Core.Kebele", b =>
                {
                    b.Property<string>("KebeleId")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("DescriptionEnglish")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUserId")
                        .HasMaxLength(256);

                    b.Property<string>("WoredaId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("KebeleId");

                    b.HasIndex("WoredaId");

                    b.ToTable("Kebele");
                });

            modelBuilder.Entity("CUSTOR.OTRLS.Core.LookUpType", b =>
                {
                    b.Property<int>("LookUpTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AfanOromo")
                        .HasMaxLength(150);

                    b.Property<string>("Afar")
                        .HasMaxLength(150);

                    b.Property<string>("Amharic")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("Description")
                        .HasMaxLength(150);

                    b.Property<string>("English")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<bool?>("IsActive");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("Somali")
                        .HasMaxLength(150);

                    b.Property<string>("Tigrigna")
                        .HasMaxLength(150);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUserId")
                        .HasMaxLength(256);

                    b.HasKey("LookUpTypeId");

                    b.ToTable("LookUpType");
                });

            modelBuilder.Entity("CUSTOR.OTRLS.Core.Lookup", b =>
                {
                    b.Property<int>("LookupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AfanOromo")
                        .HasMaxLength(150);

                    b.Property<string>("Afar")
                        .HasMaxLength(150);

                    b.Property<string>("Amharic")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("English")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<bool?>("IsActive");

                    b.Property<bool?>("IsDeleted");

                    b.Property<int>("LookUpTypeId");

                    b.Property<string>("Somali")
                        .HasMaxLength(150);

                    b.Property<string>("Tigrigna")
                        .HasMaxLength(150);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUserId")
                        .HasMaxLength(256);

                    b.HasKey("LookupId");

                    b.HasIndex("LookUpTypeId");

                    b.ToTable("Lookup");
                });

            modelBuilder.Entity("CUSTOR.OTRLS.Core.Manager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<int>("CustomerId");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FatherNameEng")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FatherNameSort")
                        .HasMaxLength(100);

                    b.Property<string>("FatherNameSoundx")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FirstNameEng")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FirstNameSort")
                        .HasMaxLength(100);

                    b.Property<string>("FirstNameSoundx")
                        .HasMaxLength(100);

                    b.Property<int>("Gender");

                    b.Property<string>("GrandName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("GrandNameEng")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("GrandNameSort")
                        .HasMaxLength(100);

                    b.Property<string>("GrandNameSoundx")
                        .HasMaxLength(100);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Nationality");

                    b.Property<int>("Origin");

                    b.Property<string>("Remark")
                        .HasMaxLength(100);

                    b.Property<string>("Tin")
                        .HasMaxLength(100);

                    b.Property<int?>("Title");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUserId")
                        .HasMaxLength(256);

                    b.HasKey("ManagerId");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("CUSTOR.OTRLS.Core.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AfanOromo")
                        .HasMaxLength(150);

                    b.Property<string>("Afar")
                        .HasMaxLength(150);

                    b.Property<string>("Amharic")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("Description")
                        .HasMaxLength(150);

                    b.Property<string>("English")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<bool?>("IsActive");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("Somali")
                        .HasMaxLength(150);

                    b.Property<string>("Tigrigna")
                        .HasMaxLength(150);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUserId")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Nationality");
                });

            modelBuilder.Entity("CUSTOR.OTRLS.Core.Region", b =>
                {
                    b.Property<string>("RegionId")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(256);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("DescriptionEnglish")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUserId")
                        .HasMaxLength(256);

                    b.HasKey("RegionId");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("CUSTOR.OTRLS.Core.Woreda", b =>
                {
                    b.Property<string>("WoredaId")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(256);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("DescriptionEnglish")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUserId")
                        .HasMaxLength(256);

                    b.Property<string>("ZoneId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("WoredaId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Woreda");
                });

            modelBuilder.Entity("CUSTOR.OTRLS.Core.Zone", b =>
                {
                    b.Property<string>("ZoneId")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(256);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("DescriptionEnglish")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RegionId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUserId")
                        .HasMaxLength(256);

                    b.HasKey("ZoneId");

                    b.HasIndex("RegionId");

                    b.ToTable("Zone");
                });

            modelBuilder.Entity("CUSTOR.OTRLS.Core.Address", b =>
                {
                    b.HasOne("CUSTOR.OTRLS.Core.Kebele", "Kebele")
                        .WithMany("Address")
                        .HasForeignKey("KebeleId")
                        .HasConstraintName("FK_Address_Kebele");

                    b.HasOne("CUSTOR.OTRLS.Core.Region", "Region")
                        .WithMany("Address")
                        .HasForeignKey("RegionId");

                    b.HasOne("CUSTOR.OTRLS.Core.Woreda", "Woreda")
                        .WithMany("Address")
                        .HasForeignKey("WoredaId")
                        .HasConstraintName("FK_Address_Woreda");

                    b.HasOne("CUSTOR.OTRLS.Core.Zone", "Zone")
                        .WithMany("Address")
                        .HasForeignKey("ZoneId");
                });

            modelBuilder.Entity("CUSTOR.OTRLS.Core.Kebele", b =>
                {
                    b.HasOne("CUSTOR.OTRLS.Core.Woreda", "Woreda")
                        .WithMany("Kebele")
                        .HasForeignKey("WoredaId");
                });

            modelBuilder.Entity("CUSTOR.OTRLS.Core.Lookup", b =>
                {
                    b.HasOne("CUSTOR.OTRLS.Core.LookUpType", "LookUpType")
                        .WithMany("Lookup")
                        .HasForeignKey("LookUpTypeId")
                        .HasConstraintName("FK_Lookup_LookUpType")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CUSTOR.OTRLS.Core.Woreda", b =>
                {
                    b.HasOne("CUSTOR.OTRLS.Core.Zone", "Zone")
                        .WithMany("Woreda")
                        .HasForeignKey("ZoneId")
                        .HasConstraintName("FK_Woreda_Zone");
                });

            modelBuilder.Entity("CUSTOR.OTRLS.Core.Zone", b =>
                {
                    b.HasOne("CUSTOR.OTRLS.Core.Region", "Region")
                        .WithMany("Zone")
                        .HasForeignKey("RegionId");
                });
#pragma warning restore 612, 618
        }
    }
}
